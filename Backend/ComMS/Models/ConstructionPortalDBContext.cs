// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;

namespace ComMS.Models;

public partial class ConstructionPortalDBContext : IdentityDbContext<ApplicationUser, IdentityRole<Guid>,Guid>
{
    public ConstructionPortalDBContext(DbContextOptions<ConstructionPortalDBContext> options)
        : base(options)
    {
    }

    #region dbsets
    public virtual DbSet<TC_ZIP> TC_ZIP { get; set; }

    public virtual DbSet<TC_データテーブル一覧> TC_データテーブル一覧 { get; set; }

    public virtual DbSet<TC_見積情報_QuoteInformation> TC_見積情報 { get; set; }

    public virtual DbSet<TC_部署データ_TC_DepartmentData> TC_部署データ_TC_DepartmentData { get; set; }

    public virtual DbSet<TI_基礎データ_BasicData> TI_基礎データ_BasicData { get; set; }

    public virtual DbSet<TI_工種データ_ConstructionTypeData> TI_工種データ_ConstructionTypeData { get; set; }

    public virtual DbSet<TI_比較GP名データ_ComparisonGroupNameData> TI_比較GP名データ_ComparisonGroupNameData { get; set; }

    public virtual DbSet<TI_比較データ_ComparisonData> TI_比較データ_ComparisonData { get; set; }

    public virtual DbSet<TI_比較基本データ_ComparisonBasicData> TI_比較基本データ_ComparisonBasicData { get; set; }

    public virtual DbSet<TI_積算表紙データ_EstimatedGeneralData> TI_積算表紙データ_EstimatedGeneralData { get; set; }

    public virtual DbSet<TI_積算集計データ_EstimatedAggregationData> TI_積算集計データ_EstimatedAggregationData { get; set; }

    public virtual DbSet<TI_積算集計ヘッダ_EstimatedAggregationHeader> TI_積算集計ヘッダ_EstimatedAggregationHeader { get; set; }

    public virtual DbSet<TI_素材その他データMaterialAndAdditionalData> TI_素材その他データMaterialAndAdditionalData { get; set; }

    public virtual DbSet<TI_素材乗率データMaterialLoadRatioData> TI_素材乗率データMaterialLoadRatioData { get; set; }

    public virtual DbSet<TI_複合表紙データ_CompositCoverData> TI_複合表紙データ_CompositCoverData { get; set; }

    public virtual DbSet<TI_複合集計データ_CompositAggregationData> TI_複合集計データ_CompositAggregationData { get; set; }

    public virtual DbSet<TI_複合集計ヘッダ_CompositeAggregationHeader> TI_複合集計ヘッダ_CompositeAggregationHeader { get; set; }

    public virtual DbSet<TI_部材データ_MaterialsData> TI_部材データ_MaterialsData { get; set; }

    public virtual DbSet<TI_配線器具個数データ_WiringDeviceQuantityData> TI_配線器具個数データ_WiringDeviceQuantityData { get; set; }

    public virtual DbSet<TI_配線器具単価データ_WiringDeviceUintPriceData> TI_配線器具単価データ_WiringDeviceUintPriceData { get; set; }

    public virtual DbSet<TM_MsgTable> TM_MsgTable { get; set; }

    public virtual DbSet<TM_PaperSize> TM_PaperSize { get; set; }

    public virtual DbSet<TM_グループ名マスタ_TM_GroupNameMaster> TM_グループ名マスタ_TM_GroupNameMaster { get; set; }

    public virtual DbSet<TM_ファンクション_TM_Functions> TM_ファンクション_TM_Functions { get; set; }

    public virtual DbSet<TM_メーカーマスタ_TM_MakerMaster> TM_メーカーマスタ_TM_MakerMaster { get; set; }

    public virtual DbSet<TM_ランクマスタ_TM_RankMaster> TM_ランクマスタ_TM_RankMaster { get; set; }

    public virtual DbSet<TM_仕入先マスタ_TM_VendorMaster> TM_仕入先マスタ_TM_VendorMaster { get; set; }

    public virtual DbSet<TM_付帯分類マスタ_AuxiliaryCategoryMaster> TM_付帯分類マスタ_AuxiliaryCategoryMaster { get; set; }

    public virtual DbSet<TM_付帯分類マスタ_TM_AncillaryClassificationMaster> TM_付帯分類マスタ_TM_AncillaryClassificationMaster { get; set; }

    public virtual DbSet<TM_分類1マスタ_Category1Master> TM_分類1マスタ_Category1Master { get; set; }

    public virtual DbSet<TM_分類2マスタ_Category2Master> TM_分類2マスタ_Category2Master { get; set; }

    public virtual DbSet<TM_分類3マスタ_Category3Master> TM_分類3マスタ_Category3Master { get; set; }

    public virtual DbSet<TM_分類4マスタ_Category4Master> TM_分類4マスタ_Category4Master { get; set; }

    public virtual DbSet<TM_単位マスタ_TM_UnitMaster> TM_単位マスタ_TM_UnitMaster { get; set; }

    public virtual DbSet<TM_合成単価マスタ_TM_SyntheticUnitPriceMaster> TM_合成単価マスタ_TM_SyntheticUnitPriceMaster { get; set; }

    public virtual DbSet<TM_名称マスタ_TM_CompanyNameMaster> TM_名称マスタ_TM_NameMaster { get; set; }

    public virtual DbSet<TM_変換単位マスタ_TMUnitConversionMaster> TM_変換単位マスタ_TMUnitConversionMaster { get; set; }

    public virtual DbSet<TM_変換塗装マスタ_TMPaintingConversionMaster> TM_変換塗装マスタ_TMPaintingConversionMaster { get; set; }

    public virtual DbSet<TM_変換塗装単価マスタ_TM_PaintingConversionUnitPriceMaster> TM_変換塗装単価マスタ_TM_PaintingConversionUnitPriceMaster { get; set; }

    public virtual DbSet<TM_変換歩掛マスタ_TM_ConversionWorkRateMaster> TM_変換歩掛マスタ_TM_ConversionWorkRateMaster { get; set; }

    public virtual DbSet<TM_変換歩掛名称マスタ_TM_ConversionWorkRateNameMaster> TM_変換歩掛名称マスタ_TM_ConversionWorkRateNameMaster { get; set; }

    public virtual DbSet<TM_家電分類1マスタ_TM_HomeApplianceClassification1Master> TM_家電分類1マスタ_TM_HomeApplianceClassification1Master { get; set; }

    public virtual DbSet<TM_家電分類2マスタ_TM_HomeApplianceClassification2Master> TM_家電分類2マスタ_TM_HomeApplianceClassification2Master { get; set; }

    public virtual DbSet<TM_工事名マスタ_TM_Constructionnamemaster> TM_工事名マスタ_TM_Constructionnamemaster { get; set; }

    public virtual DbSet<TM_工種マスタ_TM_ConstructionTypeMaster> TM_工種マスタ_TM_ConstructionTypeMaster { get; set; }

    public virtual DbSet<TM_市町村マスタ_TM_MunicipalityMaster> TM_市町村マスタ_TM_MunicipalityMaster { get; set; }

    public virtual DbSet<TM_役職マスタ_TM_JobMaster> TM_役職マスタ_TM_JobMaster { get; set; }

    public virtual DbSet<TM_得意先マスタ_CustomerMaster> TM_得意先マスタ_CustomerMaster { get; set; }

    public virtual DbSet<TM_支給区分マスタ_TM_PaymentClassificationMaster> TM_支給区分マスタ_TM_PaymentClassificationMaster { get; set; }

    public virtual DbSet<TM_明細戻り_TM_ItemReturn> TM_明細戻り_TM_ItemReturn { get; set; }

    public virtual DbSet<TM_明細補助マスタ_TM_AuxiliaryItemMaster> TM_明細補助マスタ_TM_AuxiliaryItemMaster { get; set; }

    public virtual DbSet<TM_暦マスタ_TM_CalendarMaster> TM_暦マスタ_TM_CalendarMaster { get; set; }

    public virtual DbSet<TM_歩掛補正マスタ_TM_WalkCorrectionMaster> TM_歩掛補正マスタ_TM_WalkCorrectionMaster { get; set; }

    public virtual DbSet<TM_消費税_TM_ConsumptionTax> TM_消費税_TM_ConsumptionTax { get; set; }

    public virtual DbSet<TM_特殊分類1マスタ_TM__SpecialClassification1Master> TM_特殊分類1マスタ_TM__SpecialClassification1Master { get; set; }

    public virtual DbSet<TM_特殊分類2マスタ_TM_SpecialClassification2Master> TM_特殊分類2マスタ_TM_SpecialClassification2Master { get; set; }

    public virtual DbSet<TM_特記事項マスタ_TM_SpecialNoteMaster> TM_特記事項マスタ_TM_SpecialNoteMaster { get; set; }

    public virtual DbSet<TM_素材マスタ_TM_MaterialMaster> TM_素材マスタ_TM_MaterialMaster { get; set; }

    public virtual DbSet<TM_素材分類ヘッダ_TM_MaterialClassificationHeader> TM_素材分類ヘッダ_TM_MaterialClassificationHeader { get; set; }

    public virtual DbSet<TM_素材分類マスタ_TM_MaterialClassificationMaster> TM_素材分類マスタ_TM_MaterialClassificationMaster { get; set; }

    public virtual DbSet<TM_経費ランクマスタ_TM_ExpenseRankMaster> TM_経費ランクマスタ_TM_ExpenseRankMaster { get; set; }

    public virtual DbSet<TM_補助マスタ_TM_Auxiliary_SupportMaster> TM_補助マスタ_TM_Auxiliary_SupportMaster { get; set; }

    public virtual DbSet<TM_資格マスタ_TM_QualificationMaster> TM_資格マスタ_TM_QualificationMaster { get; set; }

    public virtual DbSet<TM_追加品目マスタ_TM_AdditionalMaterialMaster> TM_追加品目マスタ_TM_AdditionalMaterialMaster { get; set; }

    public virtual DbSet<TM_都道府県マスタ_PrefectureMaster> TM_都道府県マスタ_PrefectureMaster { get; set; }

    public virtual DbSet<TM_都道府県マスタ_TM__StateandProvinceMaster> TM_都道府県マスタ_TM__StateandProvinceMaster { get; set; }

    public virtual DbSet<TM_配線器具マスタ_TM_WiringFixtureMaster> TM_配線器具マスタ_TM_WiringFixtureMaster { get; set; }

    public virtual DbSet<TM_電工マスタ_TM_ElectricianMaster> TM_電工マスタ_TM_ElectricianMaster { get; set; }

    public virtual DbSet<TM_電線まとめマスタ_TM_WireSummaryMaster> TM_電線まとめマスタ_TM_WireSummaryMaster { get; set; }

    public virtual DbSet<TR_内訳明細データ_DetailedBreakdownData> TR_内訳明細データ_DetailedBreakdownData { get; set; }

    public virtual DbSet<TR_内訳複合データ_CompositeBreakdownData> TR_内訳複合データ_CompositeBreakdownData { get; set; }

    public virtual DbSet<TR_内訳集計データ_ItemizedSummaryData> TR_内訳集計データ_ItemizedSummaryData { get; set; }

    public virtual DbSet<TR_分類別複合データ_CategorywiseCompositeData> TR_分類別複合データ_CategorywiseCompositeData { get; set; }

    public virtual DbSet<TR_分類別集計データ_TR_CategorywiseSummaryData> TR_分類別集計データ_TR_CategorywiseSummaryData { get; set; }

    public virtual DbSet<TR_工種明細データ_WorkTypeDetailData> TR_工種明細データ_WorkTypeDetailData { get; set; }

    public virtual DbSet<TR_比較表データ_ComparisonTableData> TR_比較表データ_ComparisonTableData { get; set; }

    public virtual DbSet<TR_積算一覧データ_QuotationListData> TR_積算一覧データ_QuotationListData { get; set; }

    public virtual DbSet<TR_積算印刷データ_QuotationPrintData> TR_積算印刷データ_QuotationPrintData { get; set; }

    public virtual DbSet<TR_積算実行データ_QuotationExecutionData> TR_積算実行データ_QuotationExecutionData { get; set; }

    public virtual DbSet<TR_積算総括データ_QuotationSummaryData> TR_積算総括データ_QuotationSummaryData { get; set; }

    public virtual DbSet<TR_素材乗率データ_MaterialLoadingRateData> TR_素材乗率データ_MaterialLoadingRateData { get; set; }

    public virtual DbSet<TR_複合単価データ_CompositeUnitPriceData> TR_複合単価データ_CompositeUnitPriceData { get; set; }

    public virtual DbSet<TR_複合印刷データ_CompositePrintData> TR_複合印刷データ_CompositePrintData { get; set; }

    public virtual DbSet<TR_複合総括データ_CompositeSummaryData> TR_複合総括データ_CompositeSummaryData { get; set; }

    public virtual DbSet<TW_ファンクション_Function> TW_ファンクション_Function { get; set; }

    public virtual DbSet<TW_合成単価データ_CombinedUnitPriceData> TW_合成単価データ_CombinedUnitPriceData { get; set; }

    public virtual DbSet<TW_同一CD異単価チェック_SameCDDifferentUnitPriceCheck> TW_同一CD異単価チェック_SameCDDifferentUnitPriceCheck { get; set; }

    public virtual DbSet<TW_基礎データ_BasicData> TW_基礎データ_BasicData { get; set; }

    public virtual DbSet<TW_工種データ_ConstructionTypeData> TW_工種データ_ConstructionTypeData { get; set; }

    public virtual DbSet<TW_工種並替えワーク_WorkTypeReorderingWork> TW_工種並替えワーク_WorkTypeReorderingWork { get; set; }

    public virtual DbSet<TW_引用部材乗率データ_ReferencedMaterialLoadingRateData> TW_引用部材乗率データ_ReferencedMaterialLoadingRateData { get; set; }

    public virtual DbSet<TW_明細分析データ_DetailAnalysisData> TW_明細分析データ_DetailAnalysisData { get; set; }

    public virtual DbSet<TW_検索素材マスタ_SearchMaterialMaster> TW_検索素材マスタ_SearchMaterialMaster { get; set; }

    public virtual DbSet<TW_比較データ_ComparisonData> TW_比較データ_ComparisonData { get; set; }

    public virtual DbSet<TW_比較基本データ_ComparisonBasicData> TW_比較基本データ_ComparisonBasicData { get; set; }

    public virtual DbSet<TW_積算集計データ_EstimationSummaryData> TW_積算集計データ_EstimationSummaryData { get; set; }

    public virtual DbSet<TW_総合複合単価ワーク_OverallCompositeUnitPriceWork> TW_総合複合単価ワーク_OverallCompositeUnitPriceWork { get; set; }

    public virtual DbSet<TW_製作所データ_ProducersData> TW_製作所データ_ProducersData { get; set; }

    public virtual DbSet<TW_複合単価データ_CompositeUnitPriceData> TW_複合単価データ_CompositeUnitPriceData { get; set; }

    public virtual DbSet<TW_複合率設定データ_CompositeRateSettingData> TW_複合率設定データ_CompositeRateSettingData { get; set; }

    public virtual DbSet<TW_複合集計データ_CompositeAggregationData> TW_複合集計データ_CompositeAggregationData { get; set; }

    public virtual DbSet<TW_見積一覧ワーク_WorkQuotationSummary> TW_見積一覧ワーク_WorkQuotationSummary { get; set; }

    public virtual DbSet<TW_計算式_CalculationFormula> TW_計算式_CalculationFormula { get; set; }

    public virtual DbSet<TW_追加並替えワーク_AdditionalReorderingWork> TW_追加並替えワーク_AdditionalReorderingWork { get; set; }

    public virtual DbSet<TW_部材データ_MaterialsData> TW_部材データ_MaterialsData { get; set; }

    public virtual DbSet<TW_部材並替えワーク1_MaterialReorderingWork1> TW_部材並替えワーク1_MaterialReorderingWork1 { get; set; }

    public virtual DbSet<TW_部材並替えワーク2_MaterialReorderingWork2> TW_部材並替えワーク2_MaterialReorderingWork2 { get; set; }

    public virtual DbSet<TW_部署データ_DepartmentData> TW_部署データ_DepartmentData { get; set; }

    public virtual DbSet<TW_集計工種選択_AggregationWorkTypeSelection> TW_集計工種選択_AggregationWorkTypeSelection { get; set; }

    public virtual DbSet<T_ErrorList> T_ErrorList { get; set; }

    public virtual DbSet<T_TablePath> T_TablePath { get; set; }
    #endregion


    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);
        modelBuilder.UseCollation("Japanese_CI_AS");

        
        

        modelBuilder.Entity<TC_ZIP>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Cyouson).HasMaxLength(80);
            entity.Property(e => e.Shiku).HasMaxLength(80);
            entity.Property(e => e.Todoufuken).HasMaxLength(10);
            entity.Property(e => e.ZIP).HasMaxLength(7);
        });

        modelBuilder.Entity<TC_データテーブル一覧>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.テーブル名).HasMaxLength(40);
        });

        modelBuilder.Entity<TC_ユーザ情報_TC_UserInformation>(entity =>
        {
            entity.HasKey(e=>e.UserCD);

            entity.Property(e => e.Initial).HasMaxLength(4);
            entity.Property(e => e.UserCD).HasMaxLength(12);
            entity.Property(e => e.UserWinID).HasMaxLength(20);
            entity.Property(e => e.労務単価_LaborUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部署CD_DepartmentCode).HasMaxLength(50);
        });

        modelBuilder.Entity<TC_見積情報_QuoteInformation>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.UserCD).HasMaxLength(12);
        });

        modelBuilder.Entity<TC_部署データ_TC_DepartmentData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.部署CD_DepartmentCode).HasMaxLength(12);
            entity.Property(e => e.部署名_DepartmentName).HasMaxLength(30);
        });

        modelBuilder.Entity<TI_基礎データ_BasicData>(entity =>
        {
            entity.HasKey(e=>e.見積番号_QuotationNumber);

            entity.Property(e => e.ランクCD_LevelCode).HasMaxLength(1);
            entity.Property(e => e.仕入先_Vendor).HasMaxLength(60);
            entity.Property(e => e.作成日付_CreationDate).HasColumnType("datetime");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.備考_Remarks).HasColumnType("string");
            entity.Property(e => e.労務単価A_LaborUnitPriceA).HasColumnType("decimal");
            entity.Property(e => e.労務単価B_LaborUnitPriceB).HasColumnType("decimal");
            entity.Property(e => e.工事名称1_ConstructionProjectName1).HasMaxLength(60);
            entity.Property(e => e.工事名称2_ProjectName2).HasMaxLength(60);
            entity.Property(e => e.工事場所_ConstructionProjectSite).HasMaxLength(60);
            entity.Property(e => e.建物構造_BuildingStructure).HasMaxLength(40);
            entity.Property(e => e.提出先1_SubmissionAddress1).HasMaxLength(60);
            entity.Property(e => e.提出先2_SubmissionAddress2).HasMaxLength(60);
            entity.Property(e => e.日付_Date).HasColumnType("datetime");
            entity.Property(e => e.普作労務単価A_GenerallaborunitpriceA).HasColumnType("decimal");
            entity.Property(e => e.普作労務単価B_GenerallaborunitpriceA).HasColumnType("decimal");
            entity.Property(e => e.更新日付_DateUpdated).HasColumnType("datetime");
            entity.Property(e => e.用途_Use).HasMaxLength(40);
            entity.Property(e => e.発注者_Client).HasMaxLength(60);
            entity.Property(e => e.表示見積番号_ShowQuotationNumber).HasMaxLength(20);
            entity.Property(e => e.見積金額_QuotationAmount).HasColumnType("decimal");
            entity.Property(e => e.諸経費_MiscellaneousExpenses).HasColumnType("decimal");
            entity.Property(e => e.電工労務単価A_ElectricianlaborunitpriceA).HasColumnType("decimal");
            entity.Property(e => e.電工労務単価B_ELectricianlaborunitpriceB).HasColumnType("decimal");
        });

        modelBuilder.Entity<TI_工種データ_ConstructionTypeData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e._雑材消耗FLG_MiscellaneousMaterialConsumptionFlag).HasColumnName("[雑材消耗FLG_MiscellaneousMaterialConsumptionFlag");
            entity.Property(e => e.付帯工事A_AssociatedConstructionA).HasColumnType("decimal");
            entity.Property(e => e.付帯工事B_AssociatedConstructionB).HasColumnType("decimal");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.共通費A_SharedExpensesA).HasColumnType("decimal");
            entity.Property(e => e.共通費B_SharedExpensesB).HasColumnType("decimal");
            entity.Property(e => e.労務費A_LaborCostA).HasColumnType("decimal");
            entity.Property(e => e.労務費B_LaborCostB).HasColumnType("decimal");
            entity.Property(e => e.工種名_ConstructionTypeName).HasMaxLength(60);
            entity.Property(e => e.提出金額_AmountSubmitted).HasColumnType("decimal");
            entity.Property(e => e.機材費A_EquipmentCostA).HasColumnType("decimal");
            entity.Property(e => e.機材費B_EquipmentCostB).HasColumnType("decimal");
            entity.Property(e => e.現場雑費A_OnSiteMiscellaneousCostsA).HasColumnType("decimal");
            entity.Property(e => e.現場雑費B_OnSiteMiscellaneousCostsB).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InHouseAmount).HasColumnType("decimal");
            entity.Property(e => e.表示工種番号_DiplayWorkTypeNumber).HasMaxLength(11);
            entity.Property(e => e.諸経費A_GeneralExpensesA).HasColumnType("decimal");
            entity.Property(e => e.諸経費B_GeneralExpensesB).HasColumnType("decimal");
            entity.Property(e => e.雑材消耗品費A_MiscellaneousMaterialsExpenseA).HasColumnType("decimal");
            entity.Property(e => e.雑材消耗品費B_MiscellaneousMaterialsExpenseB).HasColumnType("decimal");
        });

        modelBuilder.Entity<TI_比較GP名データ_ComparisonGroupNameData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.GP名_GPName).HasMaxLength(10);
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
        });

        modelBuilder.Entity<TI_比較データ_ComparisonData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単価1_UnitPrice1).HasColumnType("decimal");
            entity.Property(e => e.単価2_UnitPrice2).HasColumnType("decimal");
            entity.Property(e => e.単価3_UnitPrice3).HasColumnType("decimal");
            entity.Property(e => e.提出単価_ProposedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_ProposedAmount).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InHouseUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InHouseAmount).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
        });

        modelBuilder.Entity<TI_比較基本データ_ComparisonBasicData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.採用製作所名_ApprovedManufacturerName).HasMaxLength(40);
            entity.Property(e => e.製作所名1_ManufacturerName1).HasMaxLength(40);
            entity.Property(e => e.製作所名2_ManufacturerName2).HasMaxLength(40);
            entity.Property(e => e.製作所名3_ManufacturerName3).HasMaxLength(40);
            entity.Property(e => e.金額_AmountOfdecimal).HasColumnType("decimal");
            entity.Property(e => e.頁_Page).HasMaxLength(20);
        });

        modelBuilder.Entity<TI_積算表紙データ_EstimatedGeneralData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.内訳フッター_BreakdownFooter).HasMaxLength(50);
            entity.Property(e => e.内訳ヘッター_BreakdownHeader).HasMaxLength(50);
            entity.Property(e => e.出精値引_SpecialDiscount).HasColumnType("decimal");
            entity.Property(e => e.工事名称1_ProjectName1).HasMaxLength(60);
            entity.Property(e => e.工事名称2_ProjectName2).HasMaxLength(60);
            entity.Property(e => e.工事名称_ProjectName).HasMaxLength(120);
            entity.Property(e => e.工事場所_ProjectSite).HasMaxLength(60);
            entity.Property(e => e.工期_ProjectDuration).HasMaxLength(40);
            entity.Property(e => e.御社ネット_CompanyNetwork).HasMaxLength(60);
            entity.Property(e => e.御社ネット金額_CompanyNetworkAmount).HasColumnType("decimal");
            entity.Property(e => e.提出先1_SubmissionDestination1).HasMaxLength(60);
            entity.Property(e => e.提出先2_SubmissionDestination2).HasMaxLength(60);
            entity.Property(e => e.支払条件_PaymentTerms).HasMaxLength(40);
            entity.Property(e => e.敬称_HonorificTitle).HasMaxLength(6);
            entity.Property(e => e.日付_Date).HasMaxLength(10);
            entity.Property(e => e.有効期間_validityperiodOrDuration).HasMaxLength(40);
            entity.Property(e => e.消費税_SalesTax).HasMaxLength(50);
            entity.Property(e => e.消費税額_SalesTaxAmount).HasColumnType("decimal");
            entity.Property(e => e.特別金額_SpecialAmount).HasColumnType("decimal");
            entity.Property(e => e.特別項目_SpecialItem).HasMaxLength(60);
            entity.Property(e => e.特記事項1_SpecialNote1).HasMaxLength(60);
            entity.Property(e => e.特記事項2_SpecialNote2).HasMaxLength(60);
            entity.Property(e => e.特記事項3_SpecialNote3).HasMaxLength(60);
            entity.Property(e => e.特記事項4_SpecialNote4).HasMaxLength(60);
            entity.Property(e => e.特記事項5_SpecialNote5).HasMaxLength(60);
            entity.Property(e => e.発注者_Client).HasMaxLength(60);
            entity.Property(e => e.経費1_Expense1).HasColumnType("decimal");
            entity.Property(e => e.経費2_Expense2).HasColumnType("decimal");
            entity.Property(e => e.経費3_Expense3).HasColumnType("decimal");
            entity.Property(e => e.経費4_Expenses4).HasColumnType("decimal");
            entity.Property(e => e.経費名1_ExpensesName1).HasMaxLength(20);
            entity.Property(e => e.経費名2_ExpenseName2).HasMaxLength(20);
            entity.Property(e => e.経費名3ExpensesName3).HasMaxLength(20);
            entity.Property(e => e.経費名4_ExpensesName4).HasMaxLength(20);
            entity.Property(e => e.表示見積番号_VisibleQuotationNumber).HasMaxLength(20);
            entity.Property(e => e.見積総額_TotalQuotationAmount).HasColumnType("decimal");
            entity.Property(e => e.見積金額_QuotationAmount).HasColumnType("decimal");
            entity.Property(e => e.諸経費_MiscellaneousExpenses).HasColumnType("decimal");
        });

        modelBuilder.Entity<TI_積算集計データ_EstimatedAggregationData>(entity =>
        {
            entity.HasKey(e=>e.Id);

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(100);
            entity.Property(e => e.形状寸法_ShapeAndDimension).HasMaxLength(40);
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_SubmittedAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyClassificationName).HasMaxLength(15);
            entity.Property(e => e.社内単価_InHouseUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InHouseAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialClassificationName).HasMaxLength(20);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TI_積算集計ヘッダ_EstimatedAggregationHeader>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.労務単価A_LaborCostA).HasColumnType("decimal");
            entity.Property(e => e.労務単価B_LaborCostB).HasColumnType("decimal");
        });

        modelBuilder.Entity<TI_素材その他データMaterialAndAdditionalData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(40);
        });

        modelBuilder.Entity<TI_素材乗率データMaterialLoadRatioData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(40);
            entity.Property(e => e.表示素材分類名_DisplayMaterialCategoryName).HasMaxLength(20);
        });

        modelBuilder.Entity<TI_複合表紙データ_CompositCoverData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.内訳フッター_BreakdownFooter).HasMaxLength(50);
            entity.Property(e => e.内訳ヘッター_BreakdownHeader).HasMaxLength(50);
            entity.Property(e => e.出精値引_SpecialDiscount).HasColumnType("decimal");
            entity.Property(e => e.工事名称1_ProjectName1).HasMaxLength(60);
            entity.Property(e => e.工事名称2_ProjectName2).HasMaxLength(60);
            entity.Property(e => e.工事名称_ProjectName).HasMaxLength(120);
            entity.Property(e => e.工事場所_ProjectLocation).HasMaxLength(60);
            entity.Property(e => e.工期_ConstructionPeriod).HasMaxLength(40);
            entity.Property(e => e.御社ネット_YourCompanyNet).HasMaxLength(60);
            entity.Property(e => e.御社ネット金額_YourCompanyNetAmount).HasColumnType("decimal");
            entity.Property(e => e.提出先1_SubmissionDestination1).HasMaxLength(60);
            entity.Property(e => e.提出先2_SubmissionDestination2).HasMaxLength(60);
            entity.Property(e => e.支払条件_PaymentCondition).HasMaxLength(40);
            entity.Property(e => e.敬称_Honorific).HasMaxLength(6);
            entity.Property(e => e.日付_Date).HasMaxLength(10);
            entity.Property(e => e.有効期間_ValidityPeriod).HasMaxLength(40);
            entity.Property(e => e.消費税_ConsumptionTax).HasMaxLength(50);
            entity.Property(e => e.消費税額_ConsumptionTaxAmount).HasColumnType("decimal");
            entity.Property(e => e.特別金額_SpecialAmount).HasColumnType("decimal");
            entity.Property(e => e.特別項目_SpecialItem).HasMaxLength(60);
            entity.Property(e => e.特記事項1_SpecialNotes1).HasMaxLength(60);
            entity.Property(e => e.特記事項2_SpecialNotes2).HasMaxLength(60);
            entity.Property(e => e.特記事項3_SpecialNotes3).HasMaxLength(60);
            entity.Property(e => e.特記事項4_SpecialNotes4).HasMaxLength(60);
            entity.Property(e => e.特記事項5_SpecialNotes5).HasMaxLength(60);
            entity.Property(e => e.発注者_Orderer).HasMaxLength(60);
            entity.Property(e => e.経費1_Expenses1).HasColumnType("decimal");
            entity.Property(e => e.経費2_Expenses2).HasColumnType("decimal");
            entity.Property(e => e.経費3_Expenses3).HasColumnType("decimal");
            entity.Property(e => e.経費4_Expenses4).HasColumnType("decimal");
            entity.Property(e => e.経費名1_ExpensesName1).HasMaxLength(20);
            entity.Property(e => e.経費名2_ExpensesName2).HasMaxLength(20);
            entity.Property(e => e.経費名3_ExpensesName3).HasMaxLength(20);
            entity.Property(e => e.経費名4_ExpensesName4).HasMaxLength(20);
            entity.Property(e => e.表示見積番号_DisplayedEstimationNumber).HasMaxLength(20);
            entity.Property(e => e.見積総額_TotalEstimatedAmount).HasColumnType("decimal");
            entity.Property(e => e.見積金額_EstimatedAmount).HasColumnType("decimal");
            entity.Property(e => e.諸経費_MiscellaneousExpenses).HasColumnType("decimal");
        });

        modelBuilder.Entity<TI_複合集計データ_CompositAggregationData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD).HasMaxLength(12);
            entity.Property(e => e.単位).HasMaxLength(20);
            entity.Property(e => e.単価).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称).HasMaxLength(100);
            entity.Property(e => e.形状寸法).HasMaxLength(40);
            entity.Property(e => e.提出単価).HasColumnType("decimal");
            entity.Property(e => e.提出金額).HasColumnType("decimal");
            entity.Property(e => e.支給区分名).HasMaxLength(15);
            entity.Property(e => e.普作単価).HasColumnType("decimal");
            entity.Property(e => e.社内単価).HasColumnType("decimal");
            entity.Property(e => e.社内金額).HasColumnType("decimal");
            entity.Property(e => e.素材分類名).HasMaxLength(20);
            entity.Property(e => e.複合単価A).HasColumnType("decimal");
            entity.Property(e => e.複合単価B).HasColumnType("decimal");
            entity.Property(e => e.電工単価).HasColumnType("decimal");
            entity.Property(e => e.項目).HasMaxLength(50);
        });

        modelBuilder.Entity<TI_複合集計ヘッダ_CompositeAggregationHeader>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.一般管理費A_GeneralAdministrativeCostsA).HasColumnType("decimal");
            entity.Property(e => e.一般管理費B_GeneralAdministrativeCostsB).HasColumnType("decimal");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.共通仮設費A_CommonTemporaryConstructionCostsA).HasColumnType("decimal");
            entity.Property(e => e.共通仮設費B_CommonTemporaryConstructionCostsB).HasColumnType("decimal");
            entity.Property(e => e.労務単価A_LaborUnitPriceA).HasColumnType("decimal");
            entity.Property(e => e.労務単価B_LaborUnitPriceB).HasColumnType("decimal");
            entity.Property(e => e.普作単価A_NormalOperationUnitPriceA).HasColumnType("decimal");
            entity.Property(e => e.普作単価B_NormalOperationUnitPriceB).HasColumnType("decimal");
            entity.Property(e => e.現場管理費A_SiteManagementCostsA).HasColumnType("decimal");
            entity.Property(e => e.現場管理費B_SiteManagementCostsB).HasColumnType("decimal");
        });

        modelBuilder.Entity<TI_部材データ_MaterialsData>(entity =>
        {
            entity.HasKey(e=>e.Id);
            entity.Property(o => o.Id).HasColumnType("int");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.労務費小計_LaborCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.塗装費_PaintingCost).HasColumnType("decimal");
            entity.Property(e => e.天井開口_CeilingOpening).HasColumnType("decimal");
            entity.Property(e => e.形状寸法_ShapeAndSize).HasMaxLength(40);
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.材料費小計_MaterialCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名1_MaterialName1).HasMaxLength(20);
            entity.Property(e => e.部材名2_MaterialName2).HasMaxLength(20);
            entity.Property(e => e.部材名3_MaterialName3).HasMaxLength(20);
            entity.Property(e => e.部材名4_MaterialName4).HasMaxLength(20);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
            entity.Property(e => e.部材明細_MaterialDetails).HasMaxLength(30);
        });

        modelBuilder.Entity<TI_配線器具個数データ_WiringDeviceQuantityData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.配線分類名称_WiringClassificationName).HasMaxLength(30);
        });

        modelBuilder.Entity<TI_配線器具単価データ_WiringDeviceUintPriceData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.原価率_α_CostRate_Alpha).HasColumnType("decimal");
            entity.Property(e => e.原価率_プレート_CostRate_Plate).HasColumnType("decimal");
            entity.Property(e => e.原価率_取付枠_CostRate_MountingFrame).HasColumnType("decimal");
            entity.Property(e => e.原価率_部品_CostRate_Parts).HasColumnType("decimal");
            entity.Property(e => e.提出単価_α_SubmissionPrice_Alpha).HasColumnType("decimal");
            entity.Property(e => e.提出単価_プレート_SubmissionPrice_Plate).HasColumnType("decimal");
            entity.Property(e => e.提出単価_取付枠_SubmissionPrice_MountingFrame).HasColumnType("decimal");
            entity.Property(e => e.提出単価_部品_SubmissionPrice_Parts).HasColumnType("decimal");
            entity.Property(e => e.社内単価_α_InternalPrice_Alpha).HasColumnType("decimal");
            entity.Property(e => e.社内単価_プレート_InternalPrice_Plate).HasColumnType("decimal");
            entity.Property(e => e.社内単価_取付枠_InternalPrice_MountingFrame).HasColumnType("decimal");
            entity.Property(e => e.社内単価_部品_InternalPrice_Parts).HasColumnType("decimal");
            entity.Property(e => e.販売定価_α_SalesPrice_Alpha).HasColumnType("decimal");
            entity.Property(e => e.販売定価_プレート_SalesPrice_Plate).HasColumnType("decimal");
            entity.Property(e => e.販売定価_取付枠_SalesPrice_MountingFrame).HasColumnType("decimal");
            entity.Property(e => e.販売定価_部品_SalesPrice_Parts).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_MsgTable>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Command).HasMaxLength(50);
            entity.Property(e => e.Msg1).HasMaxLength(50);
            entity.Property(e => e.Msg2).HasMaxLength(50);
            entity.Property(e => e.Msg3).HasMaxLength(50);
            entity.Property(e => e.Msg4).HasMaxLength(50);
            entity.Property(e => e.Msg5).HasMaxLength(50);
            entity.Property(e => e.MsgCD).HasMaxLength(10);
        });

        modelBuilder.Entity<TM_PaperSize>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.PaperSize).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_グループ名マスタ_TM_GroupNameMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.GP名).HasMaxLength(10);
        });

        modelBuilder.Entity<TM_ファンクション_TM_Functions>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Function01).HasMaxLength(20);
            entity.Property(e => e.Function02).HasMaxLength(20);
            entity.Property(e => e.Function03).HasMaxLength(20);
            entity.Property(e => e.Function04).HasMaxLength(20);
            entity.Property(e => e.Function05).HasMaxLength(20);
            entity.Property(e => e.Function06).HasMaxLength(20);
            entity.Property(e => e.Function07).HasMaxLength(20);
            entity.Property(e => e.Function08).HasMaxLength(20);
            entity.Property(e => e.Function09).HasMaxLength(20);
            entity.Property(e => e.Function10).HasMaxLength(20);
        });

        modelBuilder.Entity<TM_メーカーマスタ_TM_MakerMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.メーカー名_ManufacturerName).HasMaxLength(20);
        });

        modelBuilder.Entity<TM_ランクマスタ_TM_RankMaster>(entity =>
        {
            entity.HasKey(e=>e.ランク名_RankName);

            entity.Property(e => e.ランク名_RankName).HasMaxLength(3);
        });

        modelBuilder.Entity<TM_仕入先マスタ_TM_VendorMaster>(entity =>
        {
            entity.HasKey(e=>e.仕入先CD_SupplierCode);

            entity.Property(e => e.FAX1_Fax1).HasMaxLength(15);
            entity.Property(e => e.FAX2_Fax2).HasMaxLength(15);
            entity.Property(e => e.HPアドレス_HomepageAddress).HasMaxLength(50);
            entity.Property(e => e.eメール_Email).HasMaxLength(30);
            entity.Property(e => e.フリガナ_Furigana).HasMaxLength(60);
            entity.Property(e => e.ランク_Rank).HasMaxLength(2);
            entity.Property(e => e.仕入先名_SupplierName).HasMaxLength(60);
            entity.Property(e => e.住所1_Address1).HasMaxLength(70);
            entity.Property(e => e.住所2_Address2).HasMaxLength(70);
            entity.Property(e => e.備考_Remarks).HasColumnType("ntext");
            entity.Property(e => e.市町村名_MunicipalityName).HasMaxLength(80);
            entity.Property(e => e.担当者_PersonInCharge).HasMaxLength(20);
            entity.Property(e => e.支社名_BranchName).HasMaxLength(60);
            entity.Property(e => e.郵便番号_PostalCode).HasMaxLength(8);
            entity.Property(e => e.都道府県名_PrefectureName).HasMaxLength(10);
            entity.Property(e => e.電話番号1_Telephone1).HasMaxLength(15);
            entity.Property(e => e.電話番号2_Telephone2).HasMaxLength(15);
        });

        modelBuilder.Entity<TM_付帯分類マスタ_AuxiliaryCategoryMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
            entity.Property(e => e.素材名_MaterialName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_付帯分類マスタ_TM_AncillaryClassificationMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
            entity.Property(e => e.素材名_MaterialName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_分類1マスタ_Category1Master>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_分類2マスタ_Category2Master>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_分類3マスタ_Category3Master>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_分類4マスタ_Category4Master>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_単位マスタ_TM_UnitMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.単位名_UnitName).HasMaxLength(10);
        });

        modelBuilder.Entity<TM_合成単価マスタ_TM_SyntheticUnitPriceMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.補助_Auxiliary).HasMaxLength(20);
            entity.Property(e => e.部材名1_MaterialName1).HasMaxLength(20);
            entity.Property(e => e.部材名2_MaterialName2).HasMaxLength(20);
            entity.Property(e => e.部材名3_MaterialName3).HasMaxLength(20);
            entity.Property(e => e.部材名4_MaterialName4).HasMaxLength(20);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
        });

        modelBuilder.Entity<TM_名称マスタ_TM_CompanyNameMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.名称_Name).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_変換単位マスタ_TMUnitConversionMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(50);
            entity.Property(e => e.単位_Unit).HasMaxLength(10);
            entity.Property(e => e.変換単位_ConversionUnit).HasMaxLength(10);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(100);
        });

        modelBuilder.Entity<TM_変換塗装マスタ_TMPaintingConversionMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.部材名_MaterialName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_変換塗装単価マスタ_TM_PaintingConversionUnitPriceMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.塗装名称_PaintName).HasMaxLength(16);
            entity.Property(e => e.金額1_Amount1).HasColumnType("decimal");
        });

        modelBuilder.Entity<TM_変換歩掛マスタ_TM_ConversionWorkRateMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.部材名_MaterialName).HasMaxLength(100);
        });

        modelBuilder.Entity<TM_変換歩掛名称マスタ_TM_ConversionWorkRateNameMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.変換歩掛名称_ConversionWorkRateName).HasMaxLength(20);
            entity.Property(e => e.略称_Abbreviation).HasMaxLength(6);
        });

        modelBuilder.Entity<TM_家電分類1マスタ_TM_HomeApplianceClassification1Master>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.データ名_DataName).HasMaxLength(60);
        });

        modelBuilder.Entity<TM_家電分類2マスタ_TM_HomeApplianceClassification2Master>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.データ名_DataName).HasMaxLength(60);
            entity.Property(e => e.家電CD_ApplianceCode).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_工事名マスタ_TM_Constructionnamemaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.工事名_ConstructionName).HasMaxLength(60);
        });

        modelBuilder.Entity<TM_工種マスタ_TM_ConstructionTypeMaster>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TM_工種マスタ_TM_ConstructionTypeMaster");

            entity.Property(e => e.工種名_WorkTypeName).HasMaxLength(60);
        });

        modelBuilder.Entity<TM_市町村マスタ_TM_MunicipalityMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.場所名_LocationName).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_役職マスタ_TM_JobMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.役職名_PositionName).HasMaxLength(60);
        });

        modelBuilder.Entity<TM_得意先マスタ_CustomerMaster>(entity =>
        {
            entity.HasKey(e=>e.得意先CD_CustomerCode);

            entity.Property(e => e.FAX1).HasMaxLength(15);
            entity.Property(e => e.FAX2).HasMaxLength(15);
            entity.Property(e => e.HPアドレス_HomepageAddress).HasMaxLength(50);
            entity.Property(e => e.eメール_Email).HasMaxLength(30);
            entity.Property(e => e.フリガナ_Furigana).HasMaxLength(60);
            entity.Property(e => e.ランク_Rank).HasMaxLength(2);
            entity.Property(e => e.住所1_Address1).HasMaxLength(70);
            entity.Property(e => e.住所2_Address2).HasMaxLength(70);
            entity.Property(e => e.備考_Remarks).HasColumnType("string");
            entity.Property(e => e.市町村名_CityName).HasMaxLength(80);
            entity.Property(e => e.得意先名_CustomerName).HasMaxLength(60);
            entity.Property(e => e.担当者_PersonInCharge).HasMaxLength(20);
            entity.Property(e => e.支社名_BranchName).HasMaxLength(60);
            entity.Property(e => e.郵便番号_PostalCode).HasMaxLength(8);
            entity.Property(e => e.都道府県名_PrefectureName).HasMaxLength(10);
            entity.Property(e => e.電話番号1_PhoneNumber1).HasMaxLength(15);
            entity.Property(e => e.電話番号2_PhoneNumber2).HasMaxLength(15);
        });

        modelBuilder.Entity<TM_支給区分マスタ_TM_PaymentClassificationMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.支給区分名_ProvisionCategoryName).HasMaxLength(10);
        });

        modelBuilder.Entity<TM_明細戻り_TM_ItemReturn>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.名称_Name).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_明細補助マスタ_TM_AuxiliaryItemMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.明細補助B_DetailSupplementB).HasMaxLength(10);
            entity.Property(e => e.明細補助F_DetailSupplementF).HasMaxLength(10);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(100);
        });

        modelBuilder.Entity<TM_暦マスタ_TM_CalendarMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.暦名_CalendarName).HasMaxLength(6);
        });

        modelBuilder.Entity<TM_歩掛補正マスタ_TM_WalkCorrectionMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.補助名_AuxiliaryName).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_消費税_TM_ConsumptionTax>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.税名_TaxName).HasMaxLength(20);
            entity.Property(e => e.終了期間_EndPeriod).HasColumnType("datetime");
            entity.Property(e => e.開始期間_StartPeriod).HasColumnType("datetime");
        });

        modelBuilder.Entity<TM_特殊分類1マスタ_TM__SpecialClassification1Master>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TM_特殊分類1マスタ_TM_ SpecialClassification1Master");

            entity.Property(e => e.データ名_DataName).HasMaxLength(60);
        });

        modelBuilder.Entity<TM_特殊分類2マスタ_TM_SpecialClassification2Master>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.データ名_DataName).HasMaxLength(60);
        });

        modelBuilder.Entity<TM_特記事項マスタ_TM_SpecialNoteMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(20);
            entity.Property(e => e.特記事項名_SpecialNotesName).HasMaxLength(70);
        });

        modelBuilder.Entity<TM_素材マスタ_TM_MaterialMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(50);
            entity.Property(e => e.単位_Unit).HasMaxLength(10);
            entity.Property(e => e.天井開口費_CeilingOpeningCost).HasColumnType("decimal");
            entity.Property(e => e.建物単価_BuildingUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出単価_SubmissionUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.更新日付_UpdateDate).HasColumnType("datetime");
            entity.Property(e => e.更新者_Updater).HasMaxLength(10);
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.積資単価_AccumulatedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.素材CD_MaterialCode).HasMaxLength(20);
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(40);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名_PartName).HasMaxLength(100);
            entity.Property(e => e.電設資材_ElectricalInstallationMaterial).HasColumnType("decimal");
        });

        modelBuilder.Entity<TM_素材分類ヘッダ_TM_MaterialClassificationHeader>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
        });

        modelBuilder.Entity<TM_素材分類マスタ_TM_MaterialClassificationMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(40);
            entity.Property(e => e.表示素材分類名_DisplayedMaterialCategoryName).HasMaxLength(20);
        });

        modelBuilder.Entity<TM_経費ランクマスタ_TM_ExpenseRankMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.ランクCD_RankCode).HasMaxLength(1);
            entity.Property(e => e.労務単価A_LaborCostA).HasColumnType("decimal");
            entity.Property(e => e.労務単価B_LaborCostB).HasColumnType("decimal");
        });

        modelBuilder.Entity<TM_補助マスタ_TM_Auxiliary_SupportMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.補助名_SupportName).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_資格マスタ_TM_QualificationMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.資格名_QualificationName).HasMaxLength(60);
        });

        modelBuilder.Entity<TM_追加品目マスタ_TM_AdditionalMaterialMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(50);
            entity.Property(e => e.単位_Unit).HasMaxLength(10);
            entity.Property(e => e.天井開口費_CeilingOpeningCost).HasColumnType("decimal");
            entity.Property(e => e.建物単価_BuildingUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出単価_SubmissionUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.更新日付_UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.更新者_UpdatedBy).HasMaxLength(10);
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.積資単価_AccumulatedResourceUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.素材名_MaterialName).HasMaxLength(160);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(100);
        });

        modelBuilder.Entity<TM_都道府県マスタ_PrefectureMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.都道府県名_PrefectureName).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_都道府県マスタ_TM__StateandProvinceMaster>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TM_都道府県マスタ_TM_ StateandProvinceMaster");

            entity.Property(e => e.都道府県名_PrefectureName).HasMaxLength(50);
        });

        modelBuilder.Entity<TM_配線器具マスタ_TM_WiringFixtureMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.販売定価_SellingPrice).HasColumnType("decimal");
            entity.Property(e => e.配線分類名称_WiringClassificationName).HasMaxLength(30);
            entity.Property(e => e.配線器具名称_WiringDeviceName).HasMaxLength(20);
        });

        modelBuilder.Entity<TM_電工マスタ_TM_ElectricianMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.住所1_AddressLine1).HasMaxLength(80);
            entity.Property(e => e.住所2_AddressLine2).HasMaxLength(80);
            entity.Property(e => e.入社年月日_JoinDate).HasColumnType("datetime");
            entity.Property(e => e.労務単価_LaborUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.役職_Position).HasMaxLength(20);
            entity.Property(e => e.携帯電話1_MobilePhone1).HasMaxLength(20);
            entity.Property(e => e.携帯電話2_MobilePhone2).HasMaxLength(20);
            entity.Property(e => e.氏名_FullName).HasMaxLength(20);
            entity.Property(e => e.生年月日_DateOfBirth).HasColumnType("datetime");
            entity.Property(e => e.資格1_Qualification1).HasMaxLength(20);
            entity.Property(e => e.資格2_Qualification2).HasMaxLength(20);
            entity.Property(e => e.資格3_Qualification3).HasMaxLength(20);
            entity.Property(e => e.郵便番号_PostCode).HasMaxLength(8);
            entity.Property(e => e.電話番号1_PhoneNumber1).HasMaxLength(20);
            entity.Property(e => e.電話番号2_PhoneNumber2).HasMaxLength(20);
        });

        modelBuilder.Entity<TM_電線まとめマスタ_TM_WireSummaryMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(40);
        });

        modelBuilder.Entity<TR_内訳明細データ_DetailedBreakdownData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.備考).HasMaxLength(50);
            entity.Property(e => e.単位).HasMaxLength(10);
            entity.Property(e => e.単価).HasColumnType("decimal");
            entity.Property(e => e.工種名).HasMaxLength(60);
            entity.Property(e => e.表示工種番号).HasMaxLength(11);
            entity.Property(e => e.部材名1).HasMaxLength(60);
            entity.Property(e => e.部材名2).HasMaxLength(60);
            entity.Property(e => e.金額).HasColumnType("decimal");
        });

        modelBuilder.Entity<TR_内訳複合データ_CompositeBreakdownData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(100);
            entity.Property(e => e.形状寸法_ShapeAndDimensions).HasMaxLength(40);
            entity.Property(e => e.提出単価_QuotedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_QuotedAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.番号_Number).HasMaxLength(10);
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.複合単価A_CompositeUnitPriceA).HasColumnType("decimal");
            entity.Property(e => e.複合単価B_CompositeUnitPriceB).HasColumnType("decimal");
            entity.Property(e => e.頁番号_PageNumber).HasMaxLength(50);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TR_内訳集計データ_ItemizedSummaryData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ProductAndName).HasMaxLength(80);
            entity.Property(e => e.形状寸法_ShapeDimensions).HasMaxLength(50);
            entity.Property(e => e.提出単価_QuotationUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_QuotationAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_PaymentCategoryName).HasMaxLength(15);
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InHouseAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TR_分類別複合データ_CategorywiseCompositeData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価A_UnitPriceA).HasColumnType("decimal");
            entity.Property(e => e.単価B_UnitPriceB).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(100);
            entity.Property(e => e.形状寸法_Dimensions).HasMaxLength(80);
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.番号_Number).HasMaxLength(10);
            entity.Property(e => e.社内単価_InHouseUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InHouseAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.複合金額_CompositeAmount).HasColumnType("decimal");
            entity.Property(e => e.頁番号_PageNumber).HasMaxLength(50);
        });

        modelBuilder.Entity<TR_分類別集計データ_TR_CategorywiseSummaryData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemAndName).HasMaxLength(80);
            entity.Property(e => e.形状寸法_Dimensions).HasMaxLength(50);
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_SubmittedAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(10);
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TR_工種明細データ_WorkTypeDetailData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.No_SequenceNumber).HasMaxLength(10);
            entity.Property(e => e.予備1_Reserve1).HasMaxLength(20);
            entity.Property(e => e.備考_Remarks).HasMaxLength(50);
            entity.Property(e => e.単位_Unit).HasMaxLength(10);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.工種名1_WorkTypeName1).HasMaxLength(60);
            entity.Property(e => e.工種名2_WorkTypeName2).HasMaxLength(60);
            entity.Property(e => e.金額_TotalAmount).HasColumnType("decimal");
        });

        modelBuilder.Entity<TR_比較表データ_ComparisonTableData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.単価1_UnitPrice1).HasColumnType("decimal");
            entity.Property(e => e.単価2_UnitPrice2).HasColumnType("decimal");
            entity.Property(e => e.単価3_UnitPrice3).HasColumnType("decimal");
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.採用製作所名_SelectedManufacturerName).HasMaxLength(40);
            entity.Property(e => e.補助_Support).HasMaxLength(20);
            entity.Property(e => e.製作所名1_ManufacturerName1).HasMaxLength(40);
            entity.Property(e => e.製作所名2_ManufacturerName2).HasMaxLength(40);
            entity.Property(e => e.製作所名3_ManufacturerName3).HasMaxLength(40);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
            entity.Property(e => e.金額1_Amount1).HasColumnType("decimal");
            entity.Property(e => e.金額2_Amount2).HasColumnType("decimal");
            entity.Property(e => e.金額3_Amount3).HasColumnType("decimal");
            entity.Property(e => e.金額_Amount).HasColumnType("decimal");
            entity.Property(e => e.頁番号_PageNumber).HasMaxLength(10);
        });

        modelBuilder.Entity<TR_積算一覧データ_QuotationListData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.仕入先_Supplier).HasMaxLength(60);
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.作成者_Creator).HasMaxLength(20);
            entity.Property(e => e.原価_Cost).HasColumnType("decimal");
            entity.Property(e => e.工事名称_ProjectName).HasMaxLength(60);
            entity.Property(e => e.工事場所_ProjectLocation).HasMaxLength(60);
            entity.Property(e => e.提出先1_SubmitTo1).HasMaxLength(60);
            entity.Property(e => e.提出先2_SubmitTo2).HasMaxLength(60);
            entity.Property(e => e.期限_Deadline).HasMaxLength(50);
            entity.Property(e => e.条件_Conditions).HasMaxLength(50);
            entity.Property(e => e.粗利_GrossProfit).HasColumnType("decimal");
            entity.Property(e => e.表示見積番号_DisplayQuotationNumber).HasMaxLength(20);
            entity.Property(e => e.見積額_QuotationAmount).HasColumnType("decimal");
            entity.Property(e => e.諸経費_MiscellaneousExpenses).HasColumnType("decimal");
        });

        modelBuilder.Entity<TR_積算印刷データ_QuotationPrintData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_Price).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(80);
            entity.Property(e => e.形状寸法_Dimensions).HasMaxLength(50);
            entity.Property(e => e.提出単価_SubmittedPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_SubmittedAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyTypeName).HasMaxLength(15);
            entity.Property(e => e.社内単価_InternalPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TR_積算実行データ_QuotationExecutionData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.提出総計_SubmittedTotal).HasColumnType("decimal");
            entity.Property(e => e.提出金額_SubmittedAmount).HasColumnType("decimal");
            entity.Property(e => e.社内総計_InHouseTotal).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InHouseAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
        });

        modelBuilder.Entity<TR_積算総括データ_QuotationSummaryData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.A材_A_MaterialA_A).HasColumnType("decimal");
            entity.Property(e => e.A材_B_MaterialA_B).HasColumnType("decimal");
            entity.Property(e => e.B材_A_MaterialB_A).HasColumnType("decimal");
            entity.Property(e => e.B材_B_MaterialB_B).HasColumnType("decimal");
            entity.Property(e => e.付帯工事_A_AdditionalWork_A).HasColumnType("decimal");
            entity.Property(e => e.付帯工事_B_AdditionalWork_B).HasColumnType("decimal");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.共通費_A_CommonCosts_A).HasColumnType("decimal");
            entity.Property(e => e.共通費_B_CommonCosts_B).HasColumnType("decimal");
            entity.Property(e => e.労務費_A_LaborCost_A).HasColumnType("decimal");
            entity.Property(e => e.労務費_B_LaborCost_B).HasColumnType("decimal");
            entity.Property(e => e.小計_A_Subtotal_A).HasColumnType("decimal");
            entity.Property(e => e.小計_B_Subtotal_B).HasColumnType("decimal");
            entity.Property(e => e.工事種目_ConstructionType).HasMaxLength(60);
            entity.Property(e => e.経費等_A_Expenses_A).HasColumnType("decimal");
            entity.Property(e => e.経費等_B_Expenses_B).HasColumnType("decimal");
            entity.Property(e => e.防災_A_DisasterPrevention_A).HasColumnType("decimal");
            entity.Property(e => e.防災_B_DisasterPrevention_B).HasColumnType("decimal");
            entity.Property(e => e.雑材_A_MiscellaneousMaterials_A).HasColumnType("decimal");
            entity.Property(e => e.雑材_B_MiscellaneousMaterials_B).HasColumnType("decimal");
            entity.Property(e => e.電線類_A_Wires_A).HasColumnType("decimal");
            entity.Property(e => e.電線類_B_Wires_B).HasColumnType("decimal");
        });

        modelBuilder.Entity<TR_素材乗率データ_MaterialLoadingRateData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.素材分類名1_MaterialCategoryName1).HasMaxLength(40);
            entity.Property(e => e.素材分類名2_MaterialCategoryName2).HasMaxLength(40);
            entity.Property(e => e.素材分類名3_MaterialCategoryName3).HasMaxLength(40);
        });

        modelBuilder.Entity<TR_複合単価データ_CompositeUnitPriceData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.労務単価A_LaborUnitPriceA).HasColumnType("decimal");
            entity.Property(e => e.労務単価B_LaborUnitPriceB).HasColumnType("decimal");
            entity.Property(e => e.労務費小計_LaborCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.材料費小計_MaterialCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.番号_Number).HasMaxLength(10);
            entity.Property(e => e.補助_Supplementary).HasMaxLength(20);
            entity.Property(e => e.複合単価小計_CompositeUnitPriceSubtotal).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
            entity.Property(e => e.頁番号_PageNumber).HasMaxLength(50);
        });

        modelBuilder.Entity<TR_複合印刷データ_CompositePrintData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_AuthorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ProductAndName).HasMaxLength(80);
            entity.Property(e => e.形状寸法_ShapeAndDimension).HasMaxLength(50);
            entity.Property(e => e.提出単価_QuotationUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_QuotationAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyDivisionName).HasMaxLength(15);
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TR_複合総括データ_CompositeSummaryData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.A材_A_MaterialA_A).HasColumnType("decimal");
            entity.Property(e => e.A材_B_MaterialA_B).HasColumnType("decimal");
            entity.Property(e => e.B材_A_MaterialB_A).HasColumnType("decimal");
            entity.Property(e => e.B材_B_MaterialB_B).HasColumnType("decimal");
            entity.Property(e => e.付帯工事_A_AuxiliaryWork_A).HasColumnType("decimal");
            entity.Property(e => e.付帯工事_B_AuxiliaryWork_B).HasColumnType("decimal");
            entity.Property(e => e.作成者CD_AuthorCode).HasMaxLength(12);
            entity.Property(e => e.共通費_A_CommonCost_A).HasColumnType("decimal");
            entity.Property(e => e.共通費_B_CommonCost_B).HasColumnType("decimal");
            entity.Property(e => e.労務費_A_LaborCost_A).HasColumnType("decimal");
            entity.Property(e => e.労務費_B_LaborCost_B).HasColumnType("decimal");
            entity.Property(e => e.小計_A_Subtotal_A).HasColumnType("decimal");
            entity.Property(e => e.小計_B_Subtotal_B).HasColumnType("decimal");
            entity.Property(e => e.工事種目_ConstructionItem).HasMaxLength(60);
            entity.Property(e => e.経費等_A_ExpensesEtc_A).HasColumnType("decimal");
            entity.Property(e => e.経費等_B_ExpensesEtc_B).HasColumnType("decimal");
            entity.Property(e => e.防災_A_DisasterPrevention_A).HasColumnType("decimal");
            entity.Property(e => e.防災_B_DisasterPrevention_B).HasColumnType("decimal");
            entity.Property(e => e.雑材_A_MiscellaneousMaterials_A).HasColumnType("decimal");
            entity.Property(e => e.雑材_B_MiscellaneousMaterials_B).HasColumnType("decimal");
            entity.Property(e => e.電線類_A_Wires_A).HasColumnType("decimal");
            entity.Property(e => e.電線類_B_Wires_B).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_ファンクション_Function>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.ファンクション名_FunctionName).HasMaxLength(50);
        });

        modelBuilder.Entity<TW_合成単価データ_CombinedUnitPriceData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.補助_Assistance).HasMaxLength(20);
            entity.Property(e => e.部材名1_MaterialName1).HasMaxLength(20);
            entity.Property(e => e.部材名2_MaterialName2).HasMaxLength(20);
            entity.Property(e => e.部材名3_MaterialName3).HasMaxLength(20);
            entity.Property(e => e.部材名4_MaterialName4).HasMaxLength(20);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
        });

        modelBuilder.Entity<TW_同一CD異単価チェック_SameCDDifferentUnitPriceCheck>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.工種名_WorkTypeName).HasMaxLength(60);
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
        });

        modelBuilder.Entity<TW_基礎データ_BasicData>(entity =>
        {
            entity.HasKey(e=>e.身分証明書_ID);

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.作成者名_CreatorName).HasMaxLength(20);
            entity.Property(e => e.工事名称1_ConstructionName1).HasMaxLength(60);
            entity.Property(e => e.工事名称2_ConstructionName2).HasMaxLength(60);
            entity.Property(e => e.提出先1_QuotationDestination1).HasMaxLength(60);
            entity.Property(e => e.提出先2_QuotationDestination2).HasMaxLength(60);
            entity.Property(e => e.日付_Date).HasColumnType("datetimeoffset");
            entity.Property(e => e.表示見積番号_DisplayQuotationNumber).HasMaxLength(20);
        });

        modelBuilder.Entity<TW_工種データ_ConstructionTypeData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成日付_CreationDate).HasColumnType("datetime");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.備考_Remarks).HasMaxLength(50);
            entity.Property(e => e.工種名_ConstructionTypeName).HasMaxLength(60);
            entity.Property(e => e.更新日付_UpdateDate).HasColumnType("datetime");
            entity.Property(e => e.金額_Amount).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_工種並替えワーク_WorkTypeReorderingWork>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.付帯工事A_AdditionalWorkA).HasColumnType("decimal");
            entity.Property(e => e.付帯工事B_AdditionalWorkB).HasColumnType("decimal");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.共通費A_CommonCostA).HasColumnType("decimal");
            entity.Property(e => e.共通費B_CommonCostB).HasColumnType("decimal");
            entity.Property(e => e.労務費A_LaborCostA).HasColumnType("decimal");
            entity.Property(e => e.労務費B_LaborCostB).HasColumnType("decimal");
            entity.Property(e => e.工種名_WorkTypeName).HasMaxLength(60);
            entity.Property(e => e.提出金額_SubmittedAmount).HasColumnType("decimal");
            entity.Property(e => e.機材費A_EquipmentCostA).HasColumnType("decimal");
            entity.Property(e => e.機材費B_EquipmentCostB).HasColumnType("decimal");
            entity.Property(e => e.現場雑費A_OnSiteMiscellaneousExpensesA).HasColumnType("decimal");
            entity.Property(e => e.現場雑費B_OnSiteMiscellaneousExpensesB).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.表示工種番号_DisplayWorkTypeNumber).HasMaxLength(11);
            entity.Property(e => e.諸経費A_VariousExpensesA).HasColumnType("decimal");
            entity.Property(e => e.諸経費B_VariousExpensesB).HasColumnType("decimal");
            entity.Property(e => e.雑材消耗品費A_MiscellaneousMaterialConsumptionCostA).HasColumnType("decimal");
            entity.Property(e => e.雑材消耗品費B_MiscellaneousMaterialConsumptionCostB).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_引用部材乗率データ_ReferencedMaterialLoadingRateData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_Price).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(100);
            entity.Property(e => e.形状寸法_Dimension).HasMaxLength(40);
            entity.Property(e => e.提出単価_SubmittedPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_QuotationAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.社内単価_InHousePrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InHouseAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TW_明細分析データ_DetailAnalysisData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.A材_A_MaterialA_A).HasColumnType("decimal");
            entity.Property(e => e.A材_B_MaterialA_B).HasColumnType("decimal");
            entity.Property(e => e.B材_A_MaterialB_A).HasColumnType("decimal");
            entity.Property(e => e.B材_B_MaterialB_B).HasColumnType("decimal");
            entity.Property(e => e.一般管理費_A_GeneralManagementCosts_A).HasColumnType("decimal");
            entity.Property(e => e.一般管理費_B_GeneralManagementCosts_B).HasColumnType("decimal");
            entity.Property(e => e.付帯工事_A_AccessoryWork_A).HasColumnType("decimal");
            entity.Property(e => e.付帯工事_B_AccessoryWork_B).HasColumnType("decimal");
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.共通仮設費_A_CommonTemporaryCosts_A).HasColumnType("decimal");
            entity.Property(e => e.共通仮設費_B_CommonTemporaryCosts_B).HasColumnType("decimal");
            entity.Property(e => e.共通費_A_CommonCosts_A).HasColumnType("decimal");
            entity.Property(e => e.共通費_B_CommonCosts_B).HasColumnType("decimal");
            entity.Property(e => e.労務小計_A_LaborSubtotal_A).HasColumnType("decimal");
            entity.Property(e => e.労務小計_B_LaborSubtotal_B).HasColumnType("decimal");
            entity.Property(e => e.労務費_A_LaborCosts_A).HasColumnType("decimal");
            entity.Property(e => e.労務費_B_LaborCosts_B).HasColumnType("decimal");
            entity.Property(e => e.外注費_A_SubcontractingCosts_A).HasColumnType("decimal");
            entity.Property(e => e.外注費_B_SubcontractingCosts_B).HasColumnType("decimal");
            entity.Property(e => e.材料小計_A_MaterialSubtotal_A).HasColumnType("decimal");
            entity.Property(e => e.材料小計_B_MaterialSubtotal_B).HasColumnType("decimal");
            entity.Property(e => e.現場管理費_A_SiteManagementCosts_A).HasColumnType("decimal");
            entity.Property(e => e.現場管理費_B_SiteManagementCosts_B).HasColumnType("decimal");
            entity.Property(e => e.現場雑費_A_SiteMiscellaneousCosts_A).HasColumnType("decimal");
            entity.Property(e => e.現場雑費_B_SiteMiscellaneousCosts_B).HasColumnType("decimal");
            entity.Property(e => e.経費小計_A_CostSubtotal_A).HasColumnType("decimal");
            entity.Property(e => e.経費小計_B_CostSubtotal_B).HasColumnType("decimal");
            entity.Property(e => e.総計_A_Total_A).HasColumnType("decimal");
            entity.Property(e => e.総計_B_Total_B).HasColumnType("decimal");
            entity.Property(e => e.諸経費_A_VariousCosts_A).HasColumnType("decimal");
            entity.Property(e => e.諸経費_B_VariousCosts_B).HasColumnType("decimal");
            entity.Property(e => e.防災_A_DisasterPrevention_A).HasColumnType("decimal");
            entity.Property(e => e.防災_B_DisasterPrevention_B).HasColumnType("decimal");
            entity.Property(e => e.雑材_A_MiscMaterials_A).HasColumnType("decimal");
            entity.Property(e => e.雑材_B_MiscMaterials_B).HasColumnType("decimal");
            entity.Property(e => e.電線類_A_Wires_A).HasColumnType("decimal");
            entity.Property(e => e.電線類_B_Wires_B).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_検索素材マスタ_SearchMaterialMaster>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(50);
            entity.Property(e => e.単位_Unit).HasMaxLength(10);
            entity.Property(e => e.天井開口費_CeilingOpeningCost).HasColumnType("decimal");
            entity.Property(e => e.建物単価_BuildingUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出単価_QuotedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.更新日付_UpdateDate).HasColumnType("datetime");
            entity.Property(e => e.更新者_Updater).HasMaxLength(10);
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InHouseUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.積資単価_AccumulatedMaterialUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.素材CD_MaterialCode).HasMaxLength(20);
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(40);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名_ComponentName).HasMaxLength(100);
            entity.Property(e => e.電設資材_ElectricalMaterials).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_比較データ_ComparisonData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単価1_UnitPrice1).HasColumnType("decimal");
            entity.Property(e => e.単価2_UnitPrice2).HasColumnType("decimal");
            entity.Property(e => e.単価3_UnitPrice3).HasColumnType("decimal");
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_SubmittedAmount).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
        });

        modelBuilder.Entity<TW_比較基本データ_ComparisonBasicData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.採用製作所名_SelectedManufacturerName).HasMaxLength(40);
            entity.Property(e => e.製作所名1_ManufacturerName1).HasMaxLength(40);
            entity.Property(e => e.製作所名2_ManufacturerName2).HasMaxLength(40);
            entity.Property(e => e.製作所名3_ManufacturerName3).HasMaxLength(40);
            entity.Property(e => e.金額_Amount).HasColumnType("decimal");
            entity.Property(e => e.頁_Page).HasMaxLength(20);
        });

        modelBuilder.Entity<TW_積算集計データ_EstimationSummaryData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_UnitPrice).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(100);
            entity.Property(e => e.形状寸法_Dimensions).HasMaxLength(40);
            entity.Property(e => e.提出単価_QuotedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_QuotedAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TW_総合複合単価ワーク_OverallCompositeUnitPriceWork>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.労務単価A_LaborUnitPriceA).HasColumnType("decimal");
            entity.Property(e => e.労務単価B_LaborUnitPriceB).HasColumnType("decimal");
            entity.Property(e => e.労務費小計_LaborCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.建物単価_BuildingUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.材料費小計_MaterialCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.積資単価_AccumulatedMaterialUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.補助_Assistance).HasMaxLength(20);
            entity.Property(e => e.複合単価小計_CompositeUnitPriceSubtotal).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
        });

        modelBuilder.Entity<TW_製作所データ_ProducersData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.製作所名_ProducersName).HasMaxLength(50);
        });

        modelBuilder.Entity<TW_複合単価データ_CompositeUnitPriceData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.労務単価A_LaborPriceA).HasColumnType("decimal");
            entity.Property(e => e.労務単価B_LaborPriceB).HasColumnType("decimal");
            entity.Property(e => e.労務費小計_LaborCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.建物単価_BuildingPrice).HasColumnType("decimal");
            entity.Property(e => e.材料費小計_MaterialCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.積資単価_AccumulatedMaterialPrice).HasColumnType("decimal");
            entity.Property(e => e.補助_Support).HasMaxLength(20);
            entity.Property(e => e.複合単価小計_CompositePriceSubtotal).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
        });

        modelBuilder.Entity<TW_複合率設定データ_CompositeRateSettingData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(100);
        });

        modelBuilder.Entity<TW_複合集計データ_CompositeAggregationData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.単価_Price).HasColumnType("decimal");
            entity.Property(e => e.品名及び名称_ItemNameAndDescription).HasMaxLength(100);
            entity.Property(e => e.形状寸法_Dimension).HasMaxLength(40);
            entity.Property(e => e.提出単価_SubmittedPrice).HasColumnType("decimal");
            entity.Property(e => e.提出金額_SubmittedAmount).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.普作単価_StandardWorkPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalPrice).HasColumnType("decimal");
            entity.Property(e => e.社内金額_InternalAmount).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.複合単価A_CompositePriceA).HasColumnType("decimal");
            entity.Property(e => e.複合単価B_CompositePriceB).HasColumnType("decimal");
            entity.Property(e => e.電工単価_ElectricalWorkPrice).HasColumnType("decimal");
            entity.Property(e => e.項目_Item).HasMaxLength(50);
        });

        modelBuilder.Entity<TW_見積一覧ワーク_WorkQuotationSummary>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.仕入先_Supplier).HasMaxLength(60);
            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.作成者_Creator).HasMaxLength(20);
            entity.Property(e => e.工事名称_ProjectName).HasMaxLength(60);
            entity.Property(e => e.提出先1_QuotationDestination1).HasMaxLength(60);
            entity.Property(e => e.提出先2_QuotationDestination2).HasMaxLength(60);
            entity.Property(e => e.提出先_QuotationDestination).HasMaxLength(120);
            entity.Property(e => e.表示見積番号_DisplayQuotationNumber).HasMaxLength(20);
        });

        modelBuilder.Entity<TW_計算式_CalculationFormula>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.計算項目_CalculationItem).HasMaxLength(50);
        });

        modelBuilder.Entity<TW_追加並替えワーク_AdditionalReorderingWork>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.分類名_CategoryName).HasMaxLength(50);
            entity.Property(e => e.単位_Unit).HasMaxLength(10);
            entity.Property(e => e.建物単価_BuildingUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.積資単価_AccumulatedMaterialUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.素材名_MaterialName).HasMaxLength(160);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(100);
        });

        modelBuilder.Entity<TW_部材データ_MaterialsData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.労務費小計_LaborCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.材料費小計_MaterialCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.補助_Assistance).HasMaxLength(20);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.複合単価小計_CompositeUnitPriceSubtotal).HasColumnType("decimal");
            entity.Property(e => e.部材名1_MaterialName1).HasMaxLength(20);
            entity.Property(e => e.部材名2_MaterialName2).HasMaxLength(20);
            entity.Property(e => e.部材名3_MaterialName3).HasMaxLength(20);
            entity.Property(e => e.部材名4_MaterialName4).HasMaxLength(20);
            entity.Property(e => e.部材名5_MaterialName5).HasMaxLength(20);
            entity.Property(e => e.部材名6_MaterialName6).HasMaxLength(20);
            entity.Property(e => e.部材名7_MaterialName7).HasMaxLength(20);
            entity.Property(e => e.部材名8_MaterialName8).HasMaxLength(20);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
            entity.Property(e => e.金額_Amount).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_部材並替えワーク1_MaterialReorderingWork1>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.労務費小計_LaborCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.塗装費_PaintingCost).HasColumnType("decimal");
            entity.Property(e => e.天井開口_CeilingOpening).HasColumnType("decimal");
            entity.Property(e => e.形状寸法_Dimensions).HasMaxLength(40);
            entity.Property(e => e.提出単価_QuotedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.材料費小計_MaterialCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名1_MaterialName1).HasMaxLength(20);
            entity.Property(e => e.部材名2_MaterialName2).HasMaxLength(20);
            entity.Property(e => e.部材名3_MaterialName3).HasMaxLength(20);
            entity.Property(e => e.部材名4_MaterialName4).HasMaxLength(20);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
            entity.Property(e => e.部材明細_MaterialDetails).HasMaxLength(30);
            entity.Property(e => e.金額_Amount).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_部材並替えワーク2_MaterialReorderingWork2>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.作成者CD_CreatorCode).HasMaxLength(12);
            entity.Property(e => e.労務費小計_LaborCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.単位_Unit).HasMaxLength(20);
            entity.Property(e => e.塗装費_PaintingCost).HasColumnType("decimal");
            entity.Property(e => e.天井開口_CeilingOpening).HasColumnType("decimal");
            entity.Property(e => e.形状寸法_Dimensions).HasMaxLength(40);
            entity.Property(e => e.提出単価_SubmittedUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.支給区分名_SupplyCategoryName).HasMaxLength(15);
            entity.Property(e => e.材料費小計_MaterialCostSubtotal).HasColumnType("decimal");
            entity.Property(e => e.標準単価_StandardUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.社内単価_InternalUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.素材分類名_MaterialCategoryName).HasMaxLength(20);
            entity.Property(e => e.複合単価_CompositeUnitPrice).HasColumnType("decimal");
            entity.Property(e => e.部材名1_MaterialName1).HasMaxLength(20);
            entity.Property(e => e.部材名2_MaterialName2).HasMaxLength(20);
            entity.Property(e => e.部材名3_MaterialName3).HasMaxLength(20);
            entity.Property(e => e.部材名4_MaterialName4).HasMaxLength(20);
            entity.Property(e => e.部材名_MaterialName).HasMaxLength(80);
            entity.Property(e => e.部材明細_MaterialDetails).HasMaxLength(30);
            entity.Property(e => e.金額_Amount).HasColumnType("decimal");
        });

        modelBuilder.Entity<TW_部署データ_DepartmentData>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.部署CD_DepartmentCode).HasMaxLength(12);
            entity.Property(e => e.部署名_DepartmentName).HasMaxLength(30);
        });

        modelBuilder.Entity<TW_集計工種選択_AggregationWorkTypeSelection>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.工種名_WorkTypeName).HasMaxLength(60);
        });

        modelBuilder.Entity<T_ErrorList>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Err_Date).HasColumnType("datetime");
            entity.Property(e => e.Err_Description).HasColumnType("ntext");
            entity.Property(e => e.Err_Source).HasColumnType("ntext");
            entity.Property(e => e.ID).ValueGeneratedOnAdd();
            entity.Property(e => e.ModuleName).HasMaxLength(40);
            entity.Property(e => e.ProcedureName).HasMaxLength(40);
        });

        modelBuilder.Entity<T_TablePath>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Comment).HasMaxLength(50);
            entity.Property(e => e.DbName).HasMaxLength(50);
            entity.Property(e => e.NewTableName).HasMaxLength(50);
            entity.Property(e => e.OldTableName).HasMaxLength(50);
            entity.Property(e => e.Path).HasMaxLength(255);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
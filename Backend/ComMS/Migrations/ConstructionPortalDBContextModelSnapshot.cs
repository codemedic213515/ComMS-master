// <auto-generated />
using System;
using ComMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComMS.Migrations
{
    [DbContext(typeof(ConstructionPortalDBContext))]
    partial class ConstructionPortalDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Japanese_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComMS.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ComMS.Models.TC_ZIP", b =>
                {
                    b.Property<string>("Cyouson")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("CyousonCD")
                        .HasColumnType("smallint");

                    b.Property<string>("Shiku")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("ShikuCD")
                        .HasColumnType("smallint");

                    b.Property<string>("Todoufuken")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("TodoufukenCD")
                        .HasColumnType("tinyint");

                    b.Property<string>("ZIP")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.ToTable("TC_ZIP");
                });

            modelBuilder.Entity("ComMS.Models.TC_データテーブル一覧", b =>
                {
                    b.Property<byte?>("Class")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("No")
                        .HasColumnType("tinyint");

                    b.Property<string>("テーブル名")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.ToTable("TC_データテーブル一覧");
                });

            modelBuilder.Entity("ComMS.Models.TC_ユーザ情報_TC_UserInformation", b =>
                {
                    b.Property<Guid>("UserCD")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initial")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("UserWinID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("労務単価_LaborUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<bool?>("有効無効_EnabledDisabled")
                        .HasColumnType("bit");

                    b.Property<int?>("権限_Permissions")
                        .HasColumnType("int");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<int?>("請求番号_InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<string>("部署CD_DepartmentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserCD");

                    b.ToTable("TC_ユーザ情報_TC_UserInformation");
                });

            modelBuilder.Entity("ComMS.Models.TC_見積情報_QuoteInformation", b =>
                {
                    b.Property<string>("UserCD")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.ToTable("TC_見積情報");
                });

            modelBuilder.Entity("ComMS.Models.TC_部署データ_TC_DepartmentData", b =>
                {
                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("部署CD_DepartmentCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("部署名_DepartmentName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("TC_部署データ_TC_DepartmentData");
                });

            modelBuilder.Entity("ComMS.Models.TI_基礎データ_BasicData", b =>
                {
                    b.Property<int?>("見積番号_QuotationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("見積番号_QuotationNumber"));

                    b.Property<byte?>("Cラック付属品FLG_CRackAccessoriesFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("Cラック付属品係数_CRackAccessoriesCoefficient")
                        .HasColumnType("real");

                    b.Property<byte?>("Cラック支持材FLG_CRackSupportMaterialFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("Cラック支持材係数_CRackSupportMaterialCoefficient")
                        .HasColumnType("real");

                    b.Property<float?>("EPS合計面積_ExpandedPolystyreneTotalArea")
                        .HasColumnType("real");

                    b.Property<byte?>("RW付属品FLG_RWAccessoriesFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("RW付属品係数_RWAccessoriesCoefficient")
                        .HasColumnType("real");

                    b.Property<byte?>("RW支持材FLG_RWSupportMaterialFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("RW支持材係数_RWSupportMaterialCoefficient")
                        .HasColumnType("real");

                    b.Property<int?>("ケーブルFLG_CableFlag")
                        .HasColumnType("int");

                    b.Property<int?>("ケーブル係数FLG_CableCoefficientFlag")
                        .HasColumnType("int");

                    b.Property<float?>("ケーブル係数_CableCoefficient")
                        .HasColumnType("real");

                    b.Property<string>("ランクCD_LevelCode")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("乗率分類番号_RateCategoryNumber")
                        .HasColumnType("int");

                    b.Property<string>("仕入先_Vendor")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<byte?>("付帯工事FLG_associatedconstructionwork")
                        .HasColumnType("tinyint");

                    b.Property<float?>("付帯工事乗率_AncillaryConstructionRate")
                        .HasColumnType("real");

                    b.Property<float?>("付帯工事原価率_AncillaryConstructionCostRate")
                        .HasColumnType("real");

                    b.Property<DateTime?>("作成日付_CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("備考_Remarks")
                        .HasColumnType("string");

                    b.Property<float?>("共通費乗率_CommonExpenseRatio")
                        .HasColumnType("real");

                    b.Property<float?>("共通費原価率_CommonCostRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("decimal");

                    b.Property<byte?>("労務費FLG_LaborCostFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("労務費基準_LaborCostStandard")
                        .HasColumnType("real");

                    b.Property<bool?>("労務費計算FLG_LaborCostCalculationFlag")
                        .HasColumnType("bit");

                    b.Property<byte?>("単価計算基準_UnitPriceCalculationStandard")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("地上_AboveGround")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("地下_UnderGround")
                        .HasColumnType("tinyint");

                    b.Property<float?>("基準床面積_ReferenceFloorArea")
                        .HasColumnType("real");

                    b.Property<byte?>("塔屋_TowerBuilding")
                        .HasColumnType("tinyint");

                    b.Property<string>("工事名称1_ConstructionProjectName1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事名称2_ProjectName2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事場所_ConstructionProjectSite")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool?>("工種部材変更FLG_F_WorkTypeMaterialChangeFlag_F")
                        .HasColumnType("bit");

                    b.Property<bool?>("工種部材変更FLG_S_WorkTypeMaterialChangeFlag_S")
                        .HasColumnType("bit");

                    b.Property<int?>("市町村CD_CityCode")
                        .HasColumnType("int");

                    b.Property<float?>("延床面積_TotalFloorArea")
                        .HasColumnType("real");

                    b.Property<string>("建物構造_BuildingStructure")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("戸数_NumberOfUnits")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("採用案No_AdoptedPlanNumber")
                        .HasColumnType("tinyint");

                    b.Property<string>("提出先1_SubmissionAddress1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先2_SubmissionAddress2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("提出先CD_SubmissionDestinationCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("日付_Date")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("普作労務単価A_GenerallaborunitpriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("普作労務単価B_GenerallaborunitpriceA")
                        .HasColumnType("decimal");

                    b.Property<DateTime?>("更新日付_DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<byte?>("歩掛計算基準_LaborCostCalculationStandard")
                        .HasColumnType("tinyint");

                    b.Property<int?>("照明取付FLG_LightingInstallationFlag")
                        .HasColumnType("int");

                    b.Property<int?>("照明取付係数FLG_LightingInstallationCoefficientFlag")
                        .HasColumnType("int");

                    b.Property<float?>("照明取付係数_LightingInstallationCoefficient")
                        .HasColumnType("real");

                    b.Property<byte?>("現場雑費FLG_SiteMiscellaneousExpensesFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("現場雑費率_SiteMiscellaneousExpenseRate")
                        .HasColumnType("real");

                    b.Property<byte?>("現場雑費端数_SiteMiscellaneousExpenseRounding")
                        .HasColumnType("tinyint");

                    b.Property<string>("用途_Use")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("発注者CD_ClientCode")
                        .HasColumnType("int");

                    b.Property<string>("発注者_Client")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("盤取付FLG_PanelInstallationFlag")
                        .HasColumnType("int");

                    b.Property<int?>("盤取付係数FLG_PanelInstallationCoefficientFlag")
                        .HasColumnType("int");

                    b.Property<float?>("盤取付係数_PanelInstallationCoefficient")
                        .HasColumnType("real");

                    b.Property<byte?>("積算複合FLG_AccumulationCompositFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("表示見積番号_ShowQuotationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("見積金額_QuotationAmount")
                        .HasColumnType("decimal");

                    b.Property<byte?>("諸経費FLG_MiscellaneousExpensesFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("諸経費_MiscellaneousExpenses")
                        .HasColumnType("decimal");

                    b.Property<float?>("諸経費率_MiscellaneousExpenseRate")
                        .HasColumnType("real");

                    b.Property<byte?>("諸経費端数_MiscellaneousExpenseRounding")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("都道府県CD_PrefectureCode")
                        .HasColumnType("tinyint");

                    b.Property<float?>("配管係数1_PipingCoefficient1")
                        .HasColumnType("real");

                    b.Property<float?>("配管係数2_PipingCoefficient2")
                        .HasColumnType("real");

                    b.Property<int?>("配管係数FLG_PipingCoefficientFlag")
                        .HasColumnType("int");

                    b.Property<byte?>("雑材A材B材_MiscellaneousMaterialsAandB")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("雑材消耗FLG_MiscellaneousMaterialConsumptionFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("電工労務単価A_ElectricianlaborunitpriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("電工労務単価B_ELectricianlaborunitpriceB")
                        .HasColumnType("decimal");

                    b.Property<float?>("電線管NET率_ElectricalConduitNETRate")
                        .HasColumnType("real");

                    b.Property<float?>("電線管補給率_ConduitSupplyRate")
                        .HasColumnType("real");

                    b.Property<byte?>("電線計算単位_WireCalculationRate")
                        .HasColumnType("tinyint");

                    b.Property<float?>("電線類NET率_WireNETRate")
                        .HasColumnType("real");

                    b.Property<float?>("電線類補給率_WireSupplyRate")
                        .HasColumnType("real");

                    b.HasKey("見積番号_QuotationNumber");

                    b.ToTable("TI_基礎データ_BasicData");
                });

            modelBuilder.Entity("ComMS.Models.TI_工種データ_ConstructionTypeData", b =>
                {
                    b.Property<bool?>("CL付属FLG_CLAccessoryFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("CL支持FLG_CLSupportFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("C補足材FLG_CAdditionalMaterialFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("RW付属FLG_RWAccessoryFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("RW支持FLG_RWSupportFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("_雑材消耗FLG_MiscellaneousMaterialConsumptionFlag")
                        .HasColumnType("bit")
                        .HasColumnName("[雑材消耗FLG_MiscellaneousMaterialConsumptionFlag");

                    b.Property<decimal?>("付帯工事A_AssociatedConstructionA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("付帯工事B_AssociatedConstructionB")
                        .HasColumnType("decimal");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("共通費A_SharedExpensesA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通費B_SharedExpensesB")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費A_LaborCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費B_LaborCostB")
                        .HasColumnType("decimal");

                    b.Property<int?>("工種CD_ConstructionTypeCode")
                        .HasColumnType("int");

                    b.Property<byte?>("工種Child_ConstructionTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_Work_ConstructionTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("工種名_ConstructionTypeName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("戸数_NumberOfUnits")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("提出金額_AmountSubmitted")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("機材費A_EquipmentCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("機材費B_EquipmentCostB")
                        .HasColumnType("decimal");

                    b.Property<bool?>("照明FLG_LightingFlag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("現場雑費A_OnSiteMiscellaneousCostsA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("現場雑費B_OnSiteMiscellaneousCostsB")
                        .HasColumnType("decimal");

                    b.Property<bool?>("盤FLG_PanelFlag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("社内金額_InHouseAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("表示工種番号_DiplayWorkTypeNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("表示順_DisplaySequence")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("諸経費A_GeneralExpensesA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("諸経費B_GeneralExpensesB")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材消耗品費A_MiscellaneousMaterialsExpenseA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材消耗品費B_MiscellaneousMaterialsExpenseB")
                        .HasColumnType("decimal");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.ToTable("TI_工種データ_ConstructionTypeData");
                });

            modelBuilder.Entity("ComMS.Models.TI_比較GP名データ_ComparisonGroupNameData", b =>
                {
                    b.Property<short?>("GPCD_GPCode")
                        .HasColumnType("smallint");

                    b.Property<string>("GP名_GPName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short?>("仕入先CD1_VendorCode1")
                        .HasColumnType("smallint");

                    b.Property<short?>("仕入先CD2_VendorCode2")
                        .HasColumnType("smallint");

                    b.Property<short?>("仕入先CD3_VendorCode3")
                        .HasColumnType("smallint");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("採用仕入先CD_ApprovedVendorCode")
                        .HasColumnType("smallint");

                    b.Property<short?>("表示順_DisplaySequence")
                        .HasColumnType("smallint");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("選択FLG_ChoiceFlag")
                        .HasColumnType("bit");

                    b.ToTable("TI_比較GP名データ_ComparisonGroupNameData");
                });

            modelBuilder.Entity("ComMS.Models.TI_比較データ_ComparisonData", b =>
                {
                    b.Property<byte?>("Group番号_GroupNumber")
                        .HasColumnType("tinyint");

                    b.Property<float?>("乗率_IncreaseRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("単価1_UnitPrice1")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価2_UnitPrice2")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価3_UnitPrice3")
                        .HasColumnType("decimal");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<short?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("提出単価_ProposedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出金額_ProposedAmount")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内単価_InHouseUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額_InHouseAmount")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplaySequence")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("選択FLG_ChoiceFlag")
                        .HasColumnType("bit");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.ToTable("TI_比較データ_ComparisonData");
                });

            modelBuilder.Entity("ComMS.Models.TI_比較基本データ_ComparisonBasicData", b =>
                {
                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<byte?>("掛率_MarkUpRate")
                        .HasColumnType("tinyint");

                    b.Property<string>("採用製作所名_ApprovedManufacturerName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名1_ManufacturerName1")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名2_ManufacturerName2")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名3_ManufacturerName3")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("金額_AmountOfdecimal")
                        .HasColumnType("decimal");

                    b.Property<string>("頁_Page")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("TI_比較基本データ_ComparisonBasicData");
                });

            modelBuilder.Entity("ComMS.Models.TI_積算表紙データ_EstimatedGeneralData", b =>
                {
                    b.Property<byte?>("フッターFLG_FooterFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("内訳フッター_BreakdownFooter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("内訳ヘッター_BreakdownHeader")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("出精値引FLG_DiscountFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("出精値引_SpecialDiscount")
                        .HasColumnType("decimal");

                    b.Property<string>("工事名称1_ProjectName1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事名称2_ProjectName2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事名称_ProjectName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("工事場所_ProjectSite")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工期_ProjectDuration")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<short?>("市町村CD_CityCode")
                        .HasColumnType("smallint");

                    b.Property<byte?>("御社ネットFLG_CompanyNetworkFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("御社ネット_CompanyNetwork")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("御社ネット金額_CompanyNetworkAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("提出先1_SubmissionDestination1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先2_SubmissionDestination2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("提出先CD_SubmissionDestinationCode")
                        .HasColumnType("int");

                    b.Property<byte?>("支払条件FLG_PaymentTermsFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("支払条件_PaymentTerms")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("敬称FLG_HonorificTitleFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("敬称_HonorificTitle")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("日付_Date")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("暦FLG_CalenderFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("有効期間_validityperiodOrDuration")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("消費税FLG_SalesTaxFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("消費税_SalesTax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("消費税率_SalesTaxRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("消費税額_SalesTaxAmount")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("特別金額_SpecialAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("特別項目_SpecialItem")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項1_SpecialNote1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項2_SpecialNote2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項3_SpecialNote3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項4_SpecialNote4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項5_SpecialNote5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("発注者CD_ClientCode")
                        .HasColumnType("int");

                    b.Property<string>("発注者_Client")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("経費1_Expense1")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費2_Expense2")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費3_Expense3")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費4_Expenses4")
                        .HasColumnType("decimal");

                    b.Property<byte?>("経費FLG1_ExpensesFlag1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("経費FLG2_ExpenseFlag2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("経費FLG3_ExpenseFlag3")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("経費FLG4_ExpensesFlag4")
                        .HasColumnType("tinyint");

                    b.Property<string>("経費名1_ExpensesName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("経費名2_ExpenseName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("経費名3ExpensesName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("経費名4_ExpensesName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("表示見積番号_VisibleQuotationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("見積総額_TotalQuotationAmount")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("見積金額_QuotationAmount")
                        .HasColumnType("decimal");

                    b.Property<byte?>("諸経費FLG_MiscellaneousExpensesFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("諸経費_MiscellaneousExpenses")
                        .HasColumnType("decimal");

                    b.Property<float?>("諸経費率_MiscellaneousExpensesRate")
                        .HasColumnType("real");

                    b.Property<byte?>("都道府県CD_PrefectureCode")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("金抜きFLG_PriceExclusionFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("電線まとめFLG_CableSummaryFlag")
                        .HasColumnType("bit");

                    b.ToTable("TI_積算表紙データ_EstimatedGeneralData");
                });

            modelBuilder.Entity("ComMS.Models.TI_積算集計データ_EstimatedAggregationData", b =>
                {
                    b.Property<byte?>("ABC材")
                        .HasColumnType("tinyint");

                    b.Property<float?>("NET率")
                        .HasColumnType("real");

                    b.Property<float?>("乗率")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG_CategoryFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("単位")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("単位CD")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("単価")
                        .HasColumnType("decimal");

                    b.Property<byte?>("単価計算FLG")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("塗装係数")
                        .HasColumnType("real");

                    b.Property<float?>("天井開口係数")
                        .HasColumnType("real");

                    b.Property<byte?>("工種Child_ConstructionTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_ConstructionTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<int?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価")
                        .HasColumnType("decimal");

                    b.Property<float?>("提出数量")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出金額")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量")
                        .HasColumnType("real");

                    b.Property<byte?>("案_Proposal")
                        .HasColumnType("tinyint");

                    b.Property<float?>("歩掛")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内数量")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内金額")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplaySequence")
                        .HasColumnType("int");

                    b.Property<float?>("補給率")
                        .HasColumnType("real");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率")
                        .HasColumnType("real");

                    b.Property<string>("項目")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TI_積算集計データ_EstimatedAggregationData");
                });

            modelBuilder.Entity("ComMS.Models.TI_積算集計ヘッダ_EstimatedAggregationHeader", b =>
                {
                    b.Property<byte?>("付帯工事FLG_AdditionalWorkFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("労務単価A_LaborCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務単価B_LaborCostB")
                        .HasColumnType("decimal");

                    b.Property<byte?>("労務費FLG_LaborCostFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("労務費基準_LaborCostStandard")
                        .HasColumnType("real");

                    b.Property<bool?>("労務費計算FLG_LaborCostCalculationFlag")
                        .HasColumnType("bit");

                    b.Property<byte?>("案_Plan")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("現場雑費FLG_ConstructionExpenseFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("現場雑費率_ConstructionExpenseRate")
                        .HasColumnType("real");

                    b.Property<int?>("現場雑費端数_ConstructionExpenseFraction")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("諸経費FLG_MiscellaneousExpenseFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("諸経費率_MiscellaneousExpenseRate")
                        .HasColumnType("real");

                    b.Property<int?>("諸経費端数_MiscellaneousExpenseFraction")
                        .HasColumnType("int");

                    b.Property<byte?>("雑材A材B材_MaterialAAndB")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("雑材消耗FLG_MaterialConsumptionFlag")
                        .HasColumnType("tinyint");

                    b.ToTable("TI_積算集計ヘッダ_EstimatedAggregationHeader");
                });

            modelBuilder.Entity("ComMS.Models.TI_素材その他データMaterialAndAdditionalData", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他率設定_OtherRateSetting")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.ToTable("TI_素材その他データMaterialAndAdditionalData");
                });

            modelBuilder.Entity("ComMS.Models.TI_素材乗率データMaterialLoadRatioData", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("乗率標準設定_StandardLoadRatioSetting")
                        .HasColumnType("real");

                    b.Property<float?>("乗率設定_LoadRatioSetting")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<float?>("原価率標準設定_StandardCostRateSetting")
                        .HasColumnType("real");

                    b.Property<float?>("原価率設定_CostRateSetting")
                        .HasColumnType("real");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("表示素材分類名_DisplayMaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<int?>("見積番号_EstimationNumber")
                        .HasColumnType("int");

                    b.ToTable("TI_素材乗率データMaterialLoadRatioData");
                });

            modelBuilder.Entity("ComMS.Models.TI_複合表紙データ_CompositCoverData", b =>
                {
                    b.Property<byte?>("フッターFLG_FooterFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("内訳フッター_BreakdownFooter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("内訳ヘッター_BreakdownHeader")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("出精値引FLG_SpecialDiscountFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("出精値引_SpecialDiscount")
                        .HasColumnType("decimal");

                    b.Property<string>("工事名称1_ProjectName1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事名称2_ProjectName2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事名称_ProjectName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("工事場所_ProjectLocation")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工期_ConstructionPeriod")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<short?>("市町村CD_CityTownVillageCode")
                        .HasColumnType("smallint");

                    b.Property<byte?>("御社ネットFLG_YourCompanyNetFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("御社ネット_YourCompanyNet")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("御社ネット金額_YourCompanyNetAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("提出先1_SubmissionDestination1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先2_SubmissionDestination2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("提出先CD_SubmissionDestinationCode")
                        .HasColumnType("int");

                    b.Property<byte?>("支払条件FLG_PaymentConditionFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("支払条件_PaymentCondition")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("敬称FLG_HonorificFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("敬称_Honorific")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("日付_Date")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("暦FLG_CalendarFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("有効期間_ValidityPeriod")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("消費税FLG_ConsumptionTaxFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("消費税_ConsumptionTax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("消費税率_ConsumptionTaxRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("消費税額_ConsumptionTaxAmount")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("特別金額_SpecialAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("特別項目_SpecialItem")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項1_SpecialNotes1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項2_SpecialNotes2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項3_SpecialNotes3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項4_SpecialNotes4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("特記事項5_SpecialNotes5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("発注者CD_OrdererCode")
                        .HasColumnType("int");

                    b.Property<string>("発注者_Orderer")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("経費1_Expenses1")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費2_Expenses2")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費3_Expenses3")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費4_Expenses4")
                        .HasColumnType("decimal");

                    b.Property<byte?>("経費FLG1_ExpensesFlag1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("経費FLG2_ExpensesFlag2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("経費FLG3_ExpensesFlag3")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("経費FLG4_ExpensesFlag4")
                        .HasColumnType("tinyint");

                    b.Property<string>("経費名1_ExpensesName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("経費名2_ExpensesName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("経費名3_ExpensesName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("経費名4_ExpensesName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("表示見積番号_DisplayedEstimationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("見積番号_EstimationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("見積総額_TotalEstimatedAmount")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("見積金額_EstimatedAmount")
                        .HasColumnType("decimal");

                    b.Property<byte?>("諸経費FLG_MiscellaneousExpensesFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("諸経費_MiscellaneousExpenses")
                        .HasColumnType("decimal");

                    b.Property<float?>("諸経費率_MiscellaneousExpensesRate")
                        .HasColumnType("real");

                    b.Property<byte?>("都道府県CD_PrefectureCode")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("金抜きFLG_PricingExclusionFlag")
                        .HasColumnType("bit");

                    b.ToTable("TI_複合表紙データ_CompositCoverData");
                });

            modelBuilder.Entity("ComMS.Models.TI_複合集計データ_CompositAggregationData", b =>
                {
                    b.Property<byte?>("ABC材")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他")
                        .HasColumnType("real");

                    b.Property<float?>("乗率")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG")
                        .HasColumnType("tinyint");

                    b.Property<string>("単位")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("単位CD")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("単価")
                        .HasColumnType("decimal");

                    b.Property<byte?>("単価計算FLG")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("塗装係数")
                        .HasColumnType("real");

                    b.Property<float?>("天井開口係数")
                        .HasColumnType("real");

                    b.Property<byte?>("工種Child")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG")
                        .HasColumnType("tinyint");

                    b.Property<int?>("工種番号")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出金額")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量")
                        .HasColumnType("real");

                    b.Property<decimal?>("普作単価")
                        .HasColumnType("decimal");

                    b.Property<byte?>("案")
                        .HasColumnType("tinyint");

                    b.Property<float?>("歩掛A")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B")
                        .HasColumnType("real");

                    b.Property<bool?>("比較表FLG")
                        .HasColumnType("bit");

                    b.Property<decimal?>("社内単価")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順")
                        .HasColumnType("int");

                    b.Property<float?>("補給率")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("複合単価B")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG")
                        .HasColumnType("smallint");

                    b.Property<short?>("部材番号")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率")
                        .HasColumnType("real");

                    b.Property<decimal?>("電工単価")
                        .HasColumnType("decimal");

                    b.Property<string>("項目")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TI_複合集計データ_CompositAggregationData");
                });

            modelBuilder.Entity("ComMS.Models.TI_複合集計ヘッダ_CompositeAggregationHeader", b =>
                {
                    b.Property<decimal?>("一般管理費A_GeneralAdministrativeCostsA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("一般管理費B_GeneralAdministrativeCostsB")
                        .HasColumnType("decimal");

                    b.Property<byte?>("一般管理費FLG_GeneralAdministrativeCostsFlag")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("付帯工事FLG_AdditionalWorkFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("共通仮設費A_CommonTemporaryConstructionCostsA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通仮設費B_CommonTemporaryConstructionCostsB")
                        .HasColumnType("decimal");

                    b.Property<byte?>("共通仮設費FLG_CommonTemporaryConstructionCostsFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("decimal");

                    b.Property<byte?>("新営改修FLG_NewConstructionOrRenovationFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("普作単価A_NormalOperationUnitPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("普作単価B_NormalOperationUnitPriceB")
                        .HasColumnType("decimal");

                    b.Property<byte?>("案_Plan")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("現場管理費A_SiteManagementCostsA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("現場管理費B_SiteManagementCostsB")
                        .HasColumnType("decimal");

                    b.Property<byte?>("現場管理費FLG_SiteManagementCostsFlag")
                        .HasColumnType("tinyint");

                    b.Property<int?>("見積番号_EstimationNumber")
                        .HasColumnType("int");

                    b.ToTable("TI_複合集計ヘッダ_CompositeAggregationHeader");
                });

            modelBuilder.Entity("ComMS.Models.TI_部材データ_MaterialsData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("ABC材_ABCMaterials")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoriesRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("分類1_Category1")
                        .HasColumnType("int");

                    b.Property<int?>("分類2_Category2")
                        .HasColumnType("int");

                    b.Property<int?>("分類3_Category3")
                        .HasColumnType("int");

                    b.Property<int?>("分類4_Classification4")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<decimal?>("労務費小計_LaborCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<int?>("単位CD_UnitCode")
                        .HasColumnType("int");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("塗装費_PaintingCost")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("天井開口_CeilingOpening")
                        .HasColumnType("decimal");

                    b.Property<int?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_ShapeAndSize")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<int?>("支給区分CD_SupplyCategoryCode")
                        .HasColumnType("int");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset>("日付追加_DateAdded")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("最終更新日_LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("材料費小計_MaterialCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("歩掛A_LaborA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float?>("歩掛B_LaborB")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("int");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<int?>("部材FLG_MaterialFlag")
                        .HasColumnType("int");

                    b.Property<byte?>("部材GRP_MaterialGroup")
                        .HasColumnType("tinyint");

                    b.Property<string>("部材名1_MaterialName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名2_MaterialName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名3_MaterialName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名4_MaterialName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("部材明細_MaterialDetails")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("部材番号_MaterialNumber")
                        .HasColumnType("int");

                    b.Property<float?>("雑材率_MiscellaneousMaterialsRate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("TI_部材データ_MaterialsData");
                });

            modelBuilder.Entity("ComMS.Models.TI_配線器具個数データ_WiringDeviceQuantityData", b =>
                {
                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("数量_Quantity")
                        .HasColumnType("tinyint");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<short?>("配線分類CD_WiringClassificationCode")
                        .HasColumnType("smallint");

                    b.Property<string>("配線分類名称_WiringClassificationName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte?>("配線器具種別_WiringDeviceType")
                        .HasColumnType("tinyint");

                    b.ToTable("TI_配線器具個数データ_WiringDeviceQuantityData");
                });

            modelBuilder.Entity("ComMS.Models.TI_配線器具単価データ_WiringDeviceUintPriceData", b =>
                {
                    b.Property<byte?>("ハンドルFLG_HandleFlag")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("プレートNo_PlateNumber")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("プレート種類_PlateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("原価率_α_CostRate_Alpha")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("原価率_プレート_CostRate_Plate")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("原価率_取付枠_CostRate_MountingFrame")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("原価率_部品_CostRate_Parts")
                        .HasColumnType("decimal");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("提出単価_α_SubmissionPrice_Alpha")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出単価_プレート_SubmissionPrice_Plate")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出単価_取付枠_SubmissionPrice_MountingFrame")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出単価_部品_SubmissionPrice_Parts")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛_UnitRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_α_InternalPrice_Alpha")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内単価_プレート_InternalPrice_Plate")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内単価_取付枠_InternalPrice_MountingFrame")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内単価_部品_InternalPrice_Parts")
                        .HasColumnType("decimal");

                    b.Property<byte?>("種別_Category")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("絶縁枠FLG_InsulationFrameFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("見積番号_EstimationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("販売定価_α_SalesPrice_Alpha")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("販売定価_プレート_SalesPrice_Plate")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("販売定価_取付枠_SalesPrice_MountingFrame")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("販売定価_部品_SalesPrice_Parts")
                        .HasColumnType("decimal");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.ToTable("TI_配線器具単価データ_WiringDeviceUintPriceData");
                });

            modelBuilder.Entity("ComMS.Models.TM_MsgTable", b =>
                {
                    b.Property<string>("Command")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Msg1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Msg2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Msg3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Msg4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Msg5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MsgCD")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short?>("MsgLine")
                        .HasColumnType("smallint");

                    b.Property<byte?>("MsgPattern")
                        .HasColumnType("tinyint");

                    b.ToTable("TM_MsgTable");
                });

            modelBuilder.Entity("ComMS.Models.TM_PaperSize", b =>
                {
                    b.Property<short?>("No")
                        .HasColumnType("smallint");

                    b.Property<string>("PaperSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TM_PaperSize");
                });

            modelBuilder.Entity("ComMS.Models.TM_グループ名マスタ_TM_GroupNameMaster", b =>
                {
                    b.Property<int?>("GPCD")
                        .HasColumnType("int");

                    b.Property<string>("GP名")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("仕入先CD1")
                        .HasColumnType("int");

                    b.Property<int?>("仕入先CD2")
                        .HasColumnType("int");

                    b.Property<int?>("仕入先CD3")
                        .HasColumnType("int");

                    b.Property<int?>("表示順")
                        .HasColumnType("int");

                    b.Property<bool?>("選択FLG")
                        .HasColumnType("bit");

                    b.ToTable("TM_グループ名マスタ_TM_GroupNameMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_ファンクション_TM_Functions", b =>
                {
                    b.Property<string>("Function01")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function02")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function03")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function04")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function05")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function06")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function07")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function08")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function09")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Function10")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("TM_ファンクション_TM_Functions");
                });

            modelBuilder.Entity("ComMS.Models.TM_メーカーマスタ_TM_MakerMaster", b =>
                {
                    b.Property<short?>("メーカーCD_ManufacturerCode")
                        .HasColumnType("smallint");

                    b.Property<string>("メーカー名_ManufacturerName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.ToTable("TM_メーカーマスタ_TM_MakerMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_ランクマスタ_TM_RankMaster", b =>
                {
                    b.Property<string>("ランク名_RankName")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("ランクCD_RankCode")
                        .HasColumnType("int");

                    b.Property<float?>("乗率_Multiplier")
                        .HasColumnType("real");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("ランク名_RankName");

                    b.ToTable("TM_ランクマスタ_TM_RankMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_仕入先マスタ_TM_VendorMaster", b =>
                {
                    b.Property<int?>("仕入先CD_SupplierCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("仕入先CD_SupplierCode"));

                    b.Property<string>("FAX1_Fax1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FAX2_Fax2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("HPアドレス_HomepageAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("eメール_Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("グループCD_GroupCode")
                        .HasColumnType("int");

                    b.Property<string>("フリガナ_Furigana")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ランク_Rank")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("仕入先名_SupplierName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("住所1_Address1")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("住所2_Address2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("備考_Remarks")
                        .HasColumnType("ntext");

                    b.Property<int?>("出力帳票形式1_OutputReportFormat1")
                        .HasColumnType("int");

                    b.Property<int?>("出力帳票形式2_OutputReportFormat2")
                        .HasColumnType("int");

                    b.Property<int?>("市町村CD_MunicipalityCode")
                        .HasColumnType("int");

                    b.Property<string>("市町村名_MunicipalityName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("担当者_PersonInCharge")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("支社名_BranchName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool?>("積算初期FLG_InitialEstimationFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("締切日_ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("請求初期FLG_InitialBillingFlag")
                        .HasColumnType("bit");

                    b.Property<string>("郵便番号_PostalCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("都道府県CD_PrefectureCode")
                        .HasColumnType("int");

                    b.Property<string>("都道府県名_PrefectureName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("電話番号1_Telephone1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("電話番号2_Telephone2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("仕入先CD_SupplierCode");

                    b.ToTable("TM_仕入先マスタ_TM_VendorMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_付帯分類マスタ_AuxiliaryCategoryMaster", b =>
                {
                    b.Property<byte?>("GP番号1_GPNumber1")
                        .HasColumnType("tinyint");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("素材名_MaterialName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_付帯分類マスタ_AuxiliaryCategoryMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_付帯分類マスタ_TM_AncillaryClassificationMaster", b =>
                {
                    b.Property<byte?>("GP番号1_GPNumber1")
                        .HasColumnType("tinyint");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("素材名_MaterialName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_付帯分類マスタ_TM_AncillaryClassificationMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_分類1マスタ_Category1Master", b =>
                {
                    b.Property<int?>("分類1_Category1")
                        .HasColumnType("int");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("明細FLG_DetailFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("int");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.ToTable("TM_分類1マスタ_Category1Master");
                });

            modelBuilder.Entity("ComMS.Models.TM_分類2マスタ_Category2Master", b =>
                {
                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("明細FLG_DetailFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("追加FLG_AdditionalFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.ToTable("TM_分類2マスタ_Category2Master");
                });

            modelBuilder.Entity("ComMS.Models.TM_分類3マスタ_Category3Master", b =>
                {
                    b.Property<int?>("分類1_Category1")
                        .HasColumnType("int");

                    b.Property<int?>("分類2_Category2")
                        .HasColumnType("int");

                    b.Property<int?>("分類3_Category3")
                        .HasColumnType("int");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("明細FLG_DetailFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.ToTable("TM_分類3マスタ_Category3Master");
                });

            modelBuilder.Entity("ComMS.Models.TM_分類4マスタ_Category4Master", b =>
                {
                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("明細FLG_DetailFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.ToTable("TM_分類4マスタ_Category4Master");
                });

            modelBuilder.Entity("ComMS.Models.TM_単位マスタ_TM_UnitMaster", b =>
                {
                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("単位CD_UnitCode")
                        .HasColumnType("int");

                    b.Property<string>("単位名_UnitName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_単位マスタ_TM_UnitMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_合成単価マスタ_TM_SyntheticUnitPriceMaster", b =>
                {
                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛_WorkRate")
                        .HasColumnType("real");

                    b.Property<int?>("素材CD_MaterialCode")
                        .HasColumnType("int");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<byte?>("補助FLG_AuxiliaryFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("補助_Auxiliary")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名1_MaterialName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名2_MaterialName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名3_MaterialName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名4_MaterialName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.ToTable("TM_合成単価マスタ_TM_SyntheticUnitPriceMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_名称マスタ_TM_CompanyNameMaster", b =>
                {
                    b.Property<byte?>("名称CD_NameCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("名称_Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("名称番号_NameNumber")
                        .HasColumnType("tinyint");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.ToTable("TM_名称マスタ_TM_NameMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_変換単位マスタ_TMUnitConversionMaster", b =>
                {
                    b.Property<double?>("分類1_Category1")
                        .HasColumnType("float");

                    b.Property<double?>("分類2_Category2")
                        .HasColumnType("float");

                    b.Property<double?>("分類3_Category3")
                        .HasColumnType("float");

                    b.Property<double?>("分類4_Category4")
                        .HasColumnType("float");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float?>("変換係数_ConversionCoefficient")
                        .HasColumnType("real");

                    b.Property<short?>("変換単位CD_ConversionUnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("変換単位_ConversionUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("TM_変換単位マスタ_TMUnitConversionMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_変換塗装マスタ_TMPaintingConversionMaster", b =>
                {
                    b.Property<float?>("HP_HP")
                        .HasColumnType("real");

                    b.Property<double?>("分類1_Category1")
                        .HasColumnType("float");

                    b.Property<double?>("分類2_Category2")
                        .HasColumnType("float");

                    b.Property<double?>("分類3_Category3")
                        .HasColumnType("float");

                    b.Property<double?>("分類4_Category4")
                        .HasColumnType("float");

                    b.Property<float?>("塗料_Paint")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛_LaborCost")
                        .HasColumnType("real");

                    b.Property<float?>("表面積_SurfaceArea")
                        .HasColumnType("real");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.ToTable("TM_変換塗装マスタ_TMPaintingConversionMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_変換塗装単価マスタ_TM_PaintingConversionUnitPriceMaster", b =>
                {
                    b.Property<short?>("塗装CD_PaintCode")
                        .HasColumnType("smallint");

                    b.Property<byte?>("塗装FLG_PaintFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("塗装名称_PaintName")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal?>("金額1_Amount1")
                        .HasColumnType("decimal");

                    b.ToTable("TM_変換塗装単価マスタ_TM_PaintingConversionUnitPriceMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_変換歩掛マスタ_TM_ConversionWorkRateMaster", b =>
                {
                    b.Property<double?>("分類1_Category1")
                        .HasColumnType("float");

                    b.Property<double?>("分類2_Category2")
                        .HasColumnType("float");

                    b.Property<double?>("分類3_Category3")
                        .HasColumnType("float");

                    b.Property<double?>("分類4_Category4")
                        .HasColumnType("float");

                    b.Property<byte?>("変換歩掛CD_ConversionWorkRateCode")
                        .HasColumnType("tinyint");

                    b.Property<float?>("歩掛_WorkRate")
                        .HasColumnType("real");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("TM_変換歩掛マスタ_TM_ConversionWorkRateMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_変換歩掛名称マスタ_TM_ConversionWorkRateNameMaster", b =>
                {
                    b.Property<byte?>("変換歩掛CD_ConversionWorkRateCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("変換歩掛名称_ConversionWorkRateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("略称_Abbreviation")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.ToTable("TM_変換歩掛名称マスタ_TM_ConversionWorkRateNameMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_家電分類1マスタ_TM_HomeApplianceClassification1Master", b =>
                {
                    b.Property<string>("データ名_DataName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("分類1_Category")
                        .HasColumnType("smallint");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_家電分類1マスタ_TM_HomeApplianceClassification1Master");
                });

            modelBuilder.Entity("ComMS.Models.TM_家電分類2マスタ_TM_HomeApplianceClassification2Master", b =>
                {
                    b.Property<string>("データ名_DataName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("分類1_Category")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category")
                        .HasColumnType("smallint");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<string>("家電CD_ApplianceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("標準単価_StandardPrice")
                        .HasColumnType("int");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_家電分類2マスタ_TM_HomeApplianceClassification2Master");
                });

            modelBuilder.Entity("ComMS.Models.TM_工事名マスタ_TM_Constructionnamemaster", b =>
                {
                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("工事CD_ConstructionCode")
                        .HasColumnType("smallint");

                    b.Property<string>("工事名_ConstructionName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_工事名マスタ_TM_Constructionnamemaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_工種マスタ_TM_ConstructionTypeMaster", b =>
                {
                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("工種CD_WorkTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("工種名_WorkTypeName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.ToTable("TM_工種マスタ_TM_ConstructionTypeMaster", (string)null);
                });

            modelBuilder.Entity("ComMS.Models.TM_市町村マスタ_TM_MunicipalityMaster", b =>
                {
                    b.Property<bool?>("削除フラグ_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("場所分類1_LocationCategory1")
                        .HasColumnType("smallint");

                    b.Property<short?>("場所分類2_LocationCategory2")
                        .HasColumnType("smallint");

                    b.Property<short?>("場所分類3_LocationCategory3")
                        .HasColumnType("smallint");

                    b.Property<string>("場所名_LocationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("都道府県CD_PrefectureCode")
                        .HasColumnType("smallint");

                    b.ToTable("TM_市町村マスタ_TM_MunicipalityMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_役職マスタ_TM_JobMaster", b =>
                {
                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("役職CD_PositionCode")
                        .HasColumnType("smallint");

                    b.Property<string>("役職名_PositionName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_役職マスタ_TM_JobMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_得意先マスタ_CustomerMaster", b =>
                {
                    b.Property<int>("得意先CD_CustomerCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("得意先CD_CustomerCode"));

                    b.Property<string>("FAX1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FAX2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("HPアドレス_HomepageAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("eメール_Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("グループCD_GroupCode")
                        .HasColumnType("int");

                    b.Property<string>("フリガナ_Furigana")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ランク_Rank")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("住所1_Address1")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("住所2_Address2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("備考_Remarks")
                        .HasColumnType("ntext");

                    b.Property<byte?>("出力帳票形式1_OutputReportFormat1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("出力帳票形式2_OutputReportFormat2")
                        .HasColumnType("tinyint");

                    b.Property<int?>("市町村CD_CityCode")
                        .HasColumnType("int");

                    b.Property<string>("市町村名_CityName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("得意先名_CustomerName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("担当者_PersonInCharge")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("支社名_BranchName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool?>("積算初期FLG_InitialEstimationFlag")
                        .HasColumnType("bit");

                    b.Property<byte?>("締切日_ClosingDate")
                        .HasColumnType("tinyint");

                    b.Property<int>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("請求初期FLG_InitialBillingFlag")
                        .HasColumnType("bit");

                    b.Property<string>("郵便番号_PostalCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<byte?>("都道府県CD_PrefectureCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("都道府県名_PrefectureName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("電話番号1_PhoneNumber1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("電話番号2_PhoneNumber2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("得意先CD_CustomerCode");

                    b.ToTable("TM_得意先マスタ_CustomerMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_支給区分マスタ_TM_PaymentClassificationMaster", b =>
                {
                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("支給区分CD_ProvisionCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_ProvisionCategoryName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float?>("歩掛係数_WorkRateCoefficient")
                        .HasColumnType("real");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.ToTable("TM_支給区分マスタ_TM_PaymentClassificationMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_明細戻り_TM_ItemReturn", b =>
                {
                    b.Property<short?>("CD_Code")
                        .HasColumnType("smallint");

                    b.Property<byte?>("分類_Category")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<string>("名称_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_明細戻り_TM_ItemReturn");
                });

            modelBuilder.Entity("ComMS.Models.TM_明細補助マスタ_TM_AuxiliaryItemMaster", b =>
                {
                    b.Property<double?>("分類1_Category1")
                        .HasColumnType("float");

                    b.Property<double?>("分類2_Category2")
                        .HasColumnType("float");

                    b.Property<double?>("分類3_Category3")
                        .HasColumnType("float");

                    b.Property<double?>("分類4_Category4")
                        .HasColumnType("float");

                    b.Property<string>("明細補助B_DetailSupplementB")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("明細補助F_DetailSupplementF")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("TM_明細補助マスタ_TM_AuxiliaryItemMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_暦マスタ_TM_CalendarMaster", b =>
                {
                    b.Property<short?>("変更年_ChangeYear")
                        .HasColumnType("smallint");

                    b.Property<byte?>("暦CD_CalendarCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("暦名_CalendarName")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.ToTable("TM_暦マスタ_TM_CalendarMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_歩掛補正マスタ_TM_WalkCorrectionMaster", b =>
                {
                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<bool?>("削除FLG_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<byte?>("補助FLG1_AuxiliaryFlag1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("補助FLG2_AuxiliaryFlag2")
                        .HasColumnType("tinyint");

                    b.Property<string>("補助名_AuxiliaryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TM_歩掛補正マスタ_TM_WalkCorrectionMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_消費税_TM_ConsumptionTax", b =>
                {
                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("税CD_TaxCode")
                        .HasColumnType("smallint");

                    b.Property<string>("税名_TaxName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float?>("税率_TaxRate")
                        .HasColumnType("real");

                    b.Property<DateTime?>("終了期間_EndPeriod")
                        .HasColumnType("datetime");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("開始期間_StartPeriod")
                        .HasColumnType("datetime");

                    b.ToTable("TM_消費税_TM_ConsumptionTax");
                });

            modelBuilder.Entity("ComMS.Models.TM_特殊分類1マスタ_TM__SpecialClassification1Master", b =>
                {
                    b.Property<string>("データ名_DataName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("分類1_Classification1")
                        .HasColumnType("smallint");

                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TM_特殊分類1マスタ_TM_ SpecialClassification1Master", (string)null);
                });

            modelBuilder.Entity("ComMS.Models.TM_特殊分類2マスタ_TM_SpecialClassification2Master", b =>
                {
                    b.Property<string>("データ名_DataName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("分類1_Classification1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Classification2")
                        .HasColumnType("smallint");

                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("標準単価_StandardUnitPrice")
                        .HasColumnType("int");

                    b.Property<byte?>("特殊CD_SpecialCode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<byte?>("集計FLG_AggregationFlag")
                        .HasColumnType("tinyint");

                    b.ToTable("TM_特殊分類2マスタ_TM_SpecialClassification2Master");
                });

            modelBuilder.Entity("ComMS.Models.TM_特記事項マスタ_TM_SpecialNoteMaster", b =>
                {
                    b.Property<byte?>("分類CD_CategoryCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("特記事項CD_SpecialNotesCode")
                        .HasColumnType("smallint");

                    b.Property<string>("特記事項名_SpecialNotesName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.ToTable("TM_特記事項マスタ_TM_SpecialNoteMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_素材マスタ_TM_MaterialMaster", b =>
                {
                    b.Property<int?>("ABC材_ABC_Material")
                        .HasColumnType("int");

                    b.Property<decimal?>("その他_Other")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("付属品率_AccessoryRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("分類1_Category1")
                        .HasColumnType("int");

                    b.Property<int?>("分類2_Category2")
                        .HasColumnType("int");

                    b.Property<int?>("分類3_Category3")
                        .HasColumnType("int");

                    b.Property<int?>("分類4_Category4")
                        .HasColumnType("int");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<int?>("単位CD_UnitCode")
                        .HasColumnType("int");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("天井開口費_CeilingOpeningCost")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("建物単価_BuildingUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal>("提出単価_SubmissionUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("撤去率A_RemovalRateA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("撤去率B_RemovalRateB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("更新日付_UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("更新者_Updater")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal>("歩掛A_WorkRateA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("歩掛B_WorkRateB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("積資単価_AccumulatedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<string>("素材CD_MaterialCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("int");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("補給率_SupplyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<string>("部材名_PartName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("電設乗率_ElectricalInstallationRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("電設原価率_ElectricalInstallationCostRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("電設資材_ElectricalInstallationMaterial")
                        .HasColumnType("decimal");

                    b.ToTable("TM_素材マスタ_TM_MaterialMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_素材分類ヘッダ_TM_MaterialClassificationHeader", b =>
                {
                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("分類番号_CategoryNumber")
                        .HasColumnType("tinyint");

                    b.ToTable("TM_素材分類ヘッダ_TM_MaterialClassificationHeader");
                });

            modelBuilder.Entity("ComMS.Models.TM_素材分類マスタ_TM_MaterialClassificationMaster", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GP番号1_GPNumber1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GP番号2_GPNumber2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GP番号3_GPNumber3")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("GP番号4_GPNumber4")
                        .HasColumnType("bit");

                    b.Property<bool?>("NetFLG_NetFlag")
                        .HasColumnType("bit");

                    b.Property<float?>("その他率設定_OtherRateSetting")
                        .HasColumnType("real");

                    b.Property<float?>("乗率標準設定_RateStandardSetting")
                        .HasColumnType("real");

                    b.Property<byte?>("分類番号_CategoryNumber")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率標準設定_CostRateStandardSetting")
                        .HasColumnType("real");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("表示素材分類名_DisplayedMaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.ToTable("TM_素材分類マスタ_TM_MaterialClassificationMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_経費ランクマスタ_TM_ExpenseRankMaster", b =>
                {
                    b.Property<string>("ランクCD_RankCode")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal?>("労務単価A_LaborCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務単価B_LaborCostB")
                        .HasColumnType("decimal");

                    b.Property<float?>("現場雑費率_SiteMiscellaneousRate")
                        .HasColumnType("real");

                    b.Property<float?>("諸経費率_OtherExpensesRate")
                        .HasColumnType("real");

                    b.ToTable("TM_経費ランクマスタ_TM_ExpenseRankMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_補助マスタ_TM_Auxiliary_SupportMaster", b =>
                {
                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("表示順_DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<short?>("補助CD_SupportCode")
                        .HasColumnType("smallint");

                    b.Property<byte?>("補助FLG1_SupportFlag1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("補助FLG2_SupportFlag2")
                        .HasColumnType("tinyint");

                    b.Property<string>("補助名_SupportName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TM_補助マスタ_TM_Auxiliary_SupportMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_資格マスタ_TM_QualificationMaster", b =>
                {
                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<short?>("資格CD_QualificationCode")
                        .HasColumnType("smallint");

                    b.Property<string>("資格名_QualificationName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.ToTable("TM_資格マスタ_TM_QualificationMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_追加品目マスタ_TM_AdditionalMaterialMaster", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("天井開口費_CeilingOpeningCost")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("建物単価_BuildingUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出単価_SubmissionUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<bool?>("明細FLG_DetailFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("更新日付_UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("更新者_UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛A_WorkRateA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_WorkRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("積資単価_AccumulatedResourceUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("素材CD_MaterialCode")
                        .HasColumnType("int");

                    b.Property<short?>("素材分類CD_MaterialClassificationCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材名_MaterialName")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.ToTable("TM_追加品目マスタ_TM_AdditionalMaterialMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_都道府県マスタ_PrefectureMaster", b =>
                {
                    b.Property<bool?>("削除フラグ_DeletionFlag")
                        .HasColumnType("bit");

                    b.Property<byte?>("都道府県CD_PrefectureCode")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("都道府県分類_PrefectureCategory")
                        .HasColumnType("tinyint");

                    b.Property<string>("都道府県名_PrefectureName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TM_都道府県マスタ_PrefectureMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_都道府県マスタ_TM__StateandProvinceMaster", b =>
                {
                    b.Property<bool?>("削除フラグ_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<byte?>("都道府県CD_PrefectureCode")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("都道府県分類_PrefectureCategory")
                        .HasColumnType("tinyint");

                    b.Property<string>("都道府県名_PrefectureName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TM_都道府県マスタ_TM_ StateandProvinceMaster", (string)null);
                });

            modelBuilder.Entity("ComMS.Models.TM_配線器具マスタ_TM_WiringFixtureMaster", b =>
                {
                    b.Property<int?>("BackColor_BackgroundColor")
                        .HasColumnType("int");

                    b.Property<bool?>("ハンドルFLG_HandleFlag")
                        .HasColumnType("bit");

                    b.Property<byte?>("プレートCD_PlateCode")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("個口_Unit")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("分類CD_ClassificationCode")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<byte?>("取付枠FLG_MountingFrameFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛_WorkRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("販売定価_SellingPrice")
                        .HasColumnType("decimal");

                    b.Property<short?>("配線分類CD_WiringClassificationCode")
                        .HasColumnType("smallint");

                    b.Property<string>("配線分類名称_WiringClassificationName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short?>("配線器具CD_WiringDeviceCode")
                        .HasColumnType("smallint");

                    b.Property<string>("配線器具名称_WiringDeviceName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("配線器具種別_WiringDeviceType")
                        .HasColumnType("tinyint");

                    b.ToTable("TM_配線器具マスタ_TM_WiringFixtureMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_電工マスタ_TM_ElectricianMaster", b =>
                {
                    b.Property<string>("住所1_AddressLine1")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("住所2_AddressLine2")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("入社年月日_JoinDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("削除FLG_DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("労務単価_LaborUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<string>("役職_Position")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("携帯電話1_MobilePhone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("携帯電話2_MobilePhone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("氏名_FullName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("生年月日_DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("資格1_Qualification1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("資格2_Qualification2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("資格3_Qualification3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("郵便番号_PostCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<short?>("電工CD_ElectricianCode")
                        .HasColumnType("smallint");

                    b.Property<string>("電話番号1_PhoneNumber1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("電話番号2_PhoneNumber2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("TM_電工マスタ_TM_ElectricianMaster");
                });

            modelBuilder.Entity("ComMS.Models.TM_電線まとめマスタ_TM_WireSummaryMaster", b =>
                {
                    b.Property<int?>("まとめCD_SummaryCode")
                        .HasColumnType("int");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.ToTable("TM_電線まとめマスタ_TM_WireSummaryMaster");
                });

            modelBuilder.Entity("ComMS.Models.TR_内訳明細データ_DetailedBreakdownData", b =>
                {
                    b.Property<int?>("GP番号")
                        .HasColumnType("int");

                    b.Property<short?>("No")
                        .HasColumnType("smallint");

                    b.Property<string>("備考")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("単位")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("単価")
                        .HasColumnType("decimal");

                    b.Property<bool?>("合計フラグ")
                        .HasColumnType("bit");

                    b.Property<string>("工種名")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("工種番号")
                        .HasColumnType("int");

                    b.Property<float?>("数量")
                        .HasColumnType("real");

                    b.Property<string>("表示工種番号")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("表示順")
                        .HasColumnType("int");

                    b.Property<string>("部材名1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("部材名2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("部材番号")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("金額")
                        .HasColumnType("decimal");

                    b.ToTable("TR_内訳明細データ_DetailedBreakdownData");
                });

            modelBuilder.Entity("ComMS.Models.TR_内訳複合データ_CompositeBreakdownData", b =>
                {
                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<string>("品名及び名称_ItemNameAndDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_ShapeAndDimensions")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価_QuotedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出金額_QuotedAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛A_UnitLaborA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_UnitLaborB")
                        .HasColumnType("real");

                    b.Property<string>("番号_Number")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCD")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価A_CompositeUnitPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("複合単価B_CompositeUnitPriceB")
                        .HasColumnType("decimal");

                    b.Property<float?>("雑材消耗率_MiscMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<string>("頁番号_PageNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ＧP番号_GPNumber")
                        .HasColumnType("int");

                    b.ToTable("TR_内訳複合データ_CompositeBreakdownData");
                });

            modelBuilder.Entity("ComMS.Models.TR_内訳集計データ_ItemizedSummaryData", b =>
                {
                    b.Property<byte?>("GP番号_GPNumber")
                        .HasColumnType("tinyint");

                    b.Property<float?>("NETRate_NET率")
                        .HasColumnType("real");

                    b.Property<float?>("乗率_LoadingRate")
                        .HasColumnType("real");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ProductAndName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("形状寸法_ShapeDimensions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("提出単価_QuotationUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("提出数量_QuotationQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出金額_QuotationAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("支給区分名_PaymentCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool?>("改頁FLG_PageBreakFlag")
                        .HasColumnType("bit");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛_WorkRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内数量_InHouseQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内金額_InHouseAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_ReplenishmentRate")
                        .HasColumnType("real");

                    b.Property<float?>("雑材消耗率_MaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TR_内訳集計データ_ItemizedSummaryData");
                });

            modelBuilder.Entity("ComMS.Models.TR_分類別複合データ_CategorywiseCompositeData", b =>
                {
                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価A_UnitPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価B_UnitPriceB")
                        .HasColumnType("decimal");

                    b.Property<string>("品名及び名称_ItemNameAndDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("形状寸法_Dimensions")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛1_ManHourRate1")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛2_ManHourRate2")
                        .HasColumnType("real");

                    b.Property<string>("番号_Number")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("社内単価_InHouseUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額_InHouseAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_FillRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("複合金額_CompositeAmount")
                        .HasColumnType("decimal");

                    b.Property<float?>("雑材率_MiscellaneousRate")
                        .HasColumnType("real");

                    b.Property<string>("頁番号_PageNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ＧP番号_GPNumber")
                        .HasColumnType("int");

                    b.ToTable("TR_分類別複合データ_CategorywiseCompositeData");
                });

            modelBuilder.Entity("ComMS.Models.TR_分類別集計データ_TR_CategorywiseSummaryData", b =>
                {
                    b.Property<float?>("NET率_NETRate")
                        .HasColumnType("real");

                    b.Property<float?>("乗率_LoadRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG_CategoryFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ItemAndName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte?>("工種Child_WorkTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_WorkTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_Dimensions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("提出数量_SubmittedQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出金額_SubmittedAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD_SupplyCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛_ManHours")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内数量_InternalQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("部材FLG_MaterialFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TR_分類別集計データ_TR_CategorywiseSummaryData");
                });

            modelBuilder.Entity("ComMS.Models.TR_工種明細データ_WorkTypeDetailData", b =>
                {
                    b.Property<int?>("GP番号_GPNumber")
                        .HasColumnType("int");

                    b.Property<string>("No_SequenceNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("予備1_Reserve1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("備考_Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<bool?>("合計フラグ_TotalFlag")
                        .HasColumnType("bit");

                    b.Property<string>("工種名1_WorkTypeName1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工種名2_WorkTypeName2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("工種番号_WorkTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("金額_TotalAmount")
                        .HasColumnType("decimal");

                    b.ToTable("TR_工種明細データ_WorkTypeDetailData");
                });

            modelBuilder.Entity("ComMS.Models.TR_比較表データ_ComparisonTableData", b =>
                {
                    b.Property<decimal?>("単価1_UnitPrice1")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価2_UnitPrice2")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価3_UnitPrice3")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<bool?>("合計フラグ_TotalFlag")
                        .HasColumnType("bit");

                    b.Property<byte?>("掛率_DiscountRate")
                        .HasColumnType("tinyint");

                    b.Property<string>("採用製作所名_SelectedManufacturerName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("補助_Support")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("製作所名1_ManufacturerName1")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名2_ManufacturerName2")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名3_ManufacturerName3")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal?>("金額1_Amount1")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("金額2_Amount2")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("金額3_Amount3")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("金額_Amount")
                        .HasColumnType("decimal");

                    b.Property<string>("頁番号_PageNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("ＧP番号_GPNumber")
                        .HasColumnType("int");

                    b.ToTable("TR_比較表データ_ComparisonTableData");
                });

            modelBuilder.Entity("ComMS.Models.TR_積算一覧データ_QuotationListData", b =>
                {
                    b.Property<byte?>("GP番号_GPNumber")
                        .HasColumnType("tinyint");

                    b.Property<string>("仕入先_Supplier")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("作成者_Creator")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("原価_Cost")
                        .HasColumnType("decimal");

                    b.Property<string>("工事名称_ProjectName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事場所_ProjectLocation")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先1_SubmitTo1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先2_SubmitTo2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("期限_Deadline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("条件_Conditions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("粗利_GrossProfit")
                        .HasColumnType("decimal");

                    b.Property<string>("表示見積番号_DisplayQuotationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("見積額_QuotationAmount")
                        .HasColumnType("decimal");

                    b.Property<byte?>("計算種別_CalculationType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("諸経費_MiscellaneousExpenses")
                        .HasColumnType("decimal");

                    b.ToTable("TR_積算一覧データ_QuotationListData");
                });

            modelBuilder.Entity("ComMS.Models.TR_積算印刷データ_QuotationPrintData", b =>
                {
                    b.Property<byte?>("GP番号_GPNumber")
                        .HasColumnType("tinyint");

                    b.Property<float?>("NET率_NETRate")
                        .HasColumnType("real");

                    b.Property<float?>("乗率_Rate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG_CategoryFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_Price")
                        .HasColumnType("decimal");

                    b.Property<byte?>("単価計算FLG_PriceCalculationFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ItemNameAndDescription")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte?>("工種Child_WorkTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_WorkTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("工種番号_WorkTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("形状寸法_Dimensions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("提出単価_SubmittedPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("提出数量_SubmittedQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出金額_SubmittedAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD_SupplyTypeCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyTypeName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛_StandardLabor")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内数量_InternalQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_ReplacementRate")
                        .HasColumnType("real");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率_MaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TR_積算印刷データ_QuotationPrintData");
                });

            modelBuilder.Entity("ComMS.Models.TR_積算実行データ_QuotationExecutionData", b =>
                {
                    b.Property<byte?>("GP番号1_GPNumber1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GP番号2_GPNumber2")
                        .HasColumnType("tinyint");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<float?>("提出工数_SubmittedWorkHours")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出総計_SubmittedTotal")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出金額_SubmittedAmount")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内工数_InHouseWorkHours")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内総計_InHouseTotal")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額_InHouseAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.ToTable("TR_積算実行データ_QuotationExecutionData");
                });

            modelBuilder.Entity("ComMS.Models.TR_積算総括データ_QuotationSummaryData", b =>
                {
                    b.Property<decimal?>("A材_A_MaterialA_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("A材_B_MaterialA_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("B材_A_MaterialB_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("B材_B_MaterialB_B")
                        .HasColumnType("decimal");

                    b.Property<byte?>("GP番号_GPNumber")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("付帯工事_A_AdditionalWork_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("付帯工事_B_AdditionalWork_B")
                        .HasColumnType("decimal");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("共通費_A_CommonCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通費_B_CommonCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費_A_LaborCost_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費_B_LaborCost_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("小計_A_Subtotal_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("小計_B_Subtotal_B")
                        .HasColumnType("decimal");

                    b.Property<string>("工事種目_ConstructionType")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("経費等_A_Expenses_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費等_B_Expenses_B")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("防災_A_DisasterPrevention_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("防災_B_DisasterPrevention_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材_A_MiscellaneousMaterials_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材_B_MiscellaneousMaterials_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("電線類_A_Wires_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("電線類_B_Wires_B")
                        .HasColumnType("decimal");

                    b.ToTable("TR_積算総括データ_QuotationSummaryData");
                });

            modelBuilder.Entity("ComMS.Models.TR_素材乗率データ_MaterialLoadingRateData", b =>
                {
                    b.Property<byte?>("GP番号1_GPNumber1")
                        .HasColumnType("tinyint");

                    b.Property<float?>("乗率設定1_LoadingRateSetting1")
                        .HasColumnType("real");

                    b.Property<float?>("乗率設定2_LoadingRateSetting2")
                        .HasColumnType("real");

                    b.Property<float?>("乗率設定3_LoadingRateSetting3")
                        .HasColumnType("real");

                    b.Property<float?>("原価率設定1_CostRateSetting1")
                        .HasColumnType("real");

                    b.Property<float?>("原価率設定2_CostRateSetting2")
                        .HasColumnType("real");

                    b.Property<float?>("原価率設定3_CostRateSetting3")
                        .HasColumnType("real");

                    b.Property<string>("素材分類名1_MaterialCategoryName1")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("素材分類名2_MaterialCategoryName2")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("素材分類名3_MaterialCategoryName3")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<short?>("表示順1_DisplayOrder1")
                        .HasColumnType("smallint");

                    b.Property<short?>("表示順2_DisplayOrder2")
                        .HasColumnType("smallint");

                    b.Property<short?>("表示順3_DisplayOrder3")
                        .HasColumnType("smallint");

                    b.ToTable("TR_素材乗率データ_MaterialLoadingRateData");
                });

            modelBuilder.Entity("ComMS.Models.TR_複合単価データ_CompositeUnitPriceData", b =>
                {
                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoriesRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費小計_LaborCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<bool?>("合計フラグ_TotalFlag")
                        .HasColumnType("bit");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("材料費小計_MaterialCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛A_WorkEfficiencyA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_WorkEfficiencyB")
                        .HasColumnType("real");

                    b.Property<string>("番号_Number")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("空白FLG_BlankFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("補助_Supplementary")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float?>("補給率_ReplenishmentRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価小計_CompositeUnitPriceSubtotal")
                        .HasColumnType("decimal");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.Property<string>("頁番号_PageNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ＧP番号_GPNumber")
                        .HasColumnType("int");

                    b.ToTable("TR_複合単価データ_CompositeUnitPriceData");
                });

            modelBuilder.Entity("ComMS.Models.TR_複合印刷データ_CompositePrintData", b =>
                {
                    b.Property<byte?>("GP番号_GPNumber")
                        .HasColumnType("tinyint");

                    b.Property<float?>("NET率_NETRate")
                        .HasColumnType("real");

                    b.Property<float?>("乗率_LoadRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_AuthorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG_CategoryFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<byte?>("単価計算FLG_UnitPriceCalculationFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ProductAndName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte?>("工種Child_ConstructionTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_ConstructionTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("形状寸法_ShapeAndDimension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("提出単価_QuotationUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("提出数量_QuotationQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出金額_QuotationAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD_SupplyDivisionCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyDivisionName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛_LaborRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内数量_InHouseQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TR_複合印刷データ_CompositePrintData");
                });

            modelBuilder.Entity("ComMS.Models.TR_複合総括データ_CompositeSummaryData", b =>
                {
                    b.Property<decimal?>("A材_A_MaterialA_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("A材_B_MaterialA_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("B材_A_MaterialB_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("B材_B_MaterialB_B")
                        .HasColumnType("decimal");

                    b.Property<byte?>("GP番号_GPNumber")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("付帯工事_A_AuxiliaryWork_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("付帯工事_B_AuxiliaryWork_B")
                        .HasColumnType("decimal");

                    b.Property<string>("作成者CD_AuthorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("共通費_A_CommonCost_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通費_B_CommonCost_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費_A_LaborCost_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費_B_LaborCost_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("小計_A_Subtotal_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("小計_B_Subtotal_B")
                        .HasColumnType("decimal");

                    b.Property<string>("工事種目_ConstructionItem")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("経費等_A_ExpensesEtc_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費等_B_ExpensesEtc_B")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("防災_A_DisasterPrevention_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("防災_B_DisasterPrevention_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材_A_MiscellaneousMaterials_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材_B_MiscellaneousMaterials_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("電線類_A_Wires_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("電線類_B_Wires_B")
                        .HasColumnType("decimal");

                    b.ToTable("TR_複合総括データ_CompositeSummaryData");
                });

            modelBuilder.Entity("ComMS.Models.TW_ファンクション_Function", b =>
                {
                    b.Property<string>("ファンクション名_FunctionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TW_ファンクション_Function");
                });

            modelBuilder.Entity("ComMS.Models.TW_合成単価データ_CombinedUnitPriceData", b =>
                {
                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<short?>("工種番号_WorkTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛_WorkRatio")
                        .HasColumnType("real");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<byte?>("補助FLG_AssistanceFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("補助_Assistance")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("補助番号_AssistanceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<string>("部材名1_MaterialName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名2_MaterialName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名3_MaterialName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名4_MaterialName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.ToTable("TW_合成単価データ_CombinedUnitPriceData");
                });

            modelBuilder.Entity("ComMS.Models.TW_同一CD異単価チェック_SameCDDifferentUnitPriceCheck", b =>
                {
                    b.Property<float?>("乗率_RateOfIncrease")
                        .HasColumnType("real");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("工種名_WorkTypeName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("工種番号_WorkTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<bool?>("適用FLG_ApplicationFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("部材No_MaterialNumber")
                        .HasColumnType("int");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.ToTable("TW_同一CD異単価チェック_SameCDDifferentUnitPriceCheck");
                });

            modelBuilder.Entity("ComMS.Models.TW_基礎データ_BasicData", b =>
                {
                    b.Property<int>("身分証明書_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("身分証明書_ID"));

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("作成者名_CreatorName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("工事名称1_ConstructionName1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("工事名称2_ConstructionName2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先1_QuotationDestination1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先2_QuotationDestination2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("提出先CD_QuotationDestinationCode")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("日付_Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("積算複合FLG_EstimationCompositeFlag")
                        .HasColumnType("int");

                    b.Property<string>("表示見積番号_DisplayQuotationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.HasKey("身分証明書_ID");

                    b.ToTable("TW_基礎データ_BasicData");
                });

            modelBuilder.Entity("ComMS.Models.TW_工種データ_ConstructionTypeData", b =>
                {
                    b.Property<DateTime?>("作成日付_CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("備考_Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("工種CD_WorkTypeCode")
                        .HasColumnType("int");

                    b.Property<byte?>("工種Child_ConstructionTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_ConstructionTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("工種名_ConstructionTypeName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("工種枝1_ConstructionTypeBranch1")
                        .HasColumnType("smallint");

                    b.Property<short?>("工種枝2_ConstructionTypeBranch2")
                        .HasColumnType("smallint");

                    b.Property<short?>("工種枝3_ConstructionTypeBranch3")
                        .HasColumnType("smallint");

                    b.Property<short?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("更新日付_UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("金額_Amount")
                        .HasColumnType("decimal");

                    b.ToTable("TW_工種データ_ConstructionTypeData");
                });

            modelBuilder.Entity("ComMS.Models.TW_工種並替えワーク_WorkTypeReorderingWork", b =>
                {
                    b.Property<decimal?>("付帯工事A_AdditionalWorkA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("付帯工事B_AdditionalWorkB")
                        .HasColumnType("decimal");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("共通費A_CommonCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通費B_CommonCostB")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費A_LaborCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費B_LaborCostB")
                        .HasColumnType("decimal");

                    b.Property<int?>("工種CD_WorkTypeCode")
                        .HasColumnType("int");

                    b.Property<byte?>("工種Child_WorkTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_WorkTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("工種名_WorkTypeName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("戸数_NumberOfUnits")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("提出金額_SubmittedAmount")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("機材費A_EquipmentCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("機材費B_EquipmentCostB")
                        .HasColumnType("decimal");

                    b.Property<int?>("正表示順_CorrectDisplayOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("現場雑費A_OnSiteMiscellaneousExpensesA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("現場雑費B_OnSiteMiscellaneousExpensesB")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<string>("表示工種番号_DisplayWorkTypeNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("諸経費A_VariousExpensesA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("諸経費B_VariousExpensesB")
                        .HasColumnType("decimal");

                    b.Property<bool?>("雑材消耗FLG_MiscellaneousMaterialConsumptionFlag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("雑材消耗品費A_MiscellaneousMaterialConsumptionCostA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材消耗品費B_MiscellaneousMaterialConsumptionCostB")
                        .HasColumnType("decimal");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.ToTable("TW_工種並替えワーク_WorkTypeReorderingWork");
                });

            modelBuilder.Entity("ComMS.Models.TW_引用部材乗率データ_ReferencedMaterialLoadingRateData", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("NET率_NETRate")
                        .HasColumnType("real");

                    b.Property<float?>("乗率_LoadingRate")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG_CategoryFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_Price")
                        .HasColumnType("decimal");

                    b.Property<byte?>("単価計算FLG_PriceCalculationFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ItemNameAndDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("塗装係数_PaintingCoefficient")
                        .HasColumnType("real");

                    b.Property<float?>("天井開口係数_CeilingOpeningCoefficient")
                        .HasColumnType("real");

                    b.Property<byte?>("工種Child_WorkTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_ConstructionTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<int?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_Dimension")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価_SubmittedPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("提出数量_SubmittedQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出金額_QuotationAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD_SupplyCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("新工種番号_NewWorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<short?>("新部材番号_NewMaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<byte?>("案_Plan")
                        .HasColumnType("tinyint");

                    b.Property<float?>("歩掛_WorkHours")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InHousePrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内数量_InHouseQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内金額_InHouseAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_FillRate")
                        .HasColumnType("real");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TW_引用部材乗率データ_ReferencedMaterialLoadingRateData");
                });

            modelBuilder.Entity("ComMS.Models.TW_明細分析データ_DetailAnalysisData", b =>
                {
                    b.Property<decimal?>("A材_A_MaterialA_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("A材_B_MaterialA_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("B材_A_MaterialB_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("B材_B_MaterialB_B")
                        .HasColumnType("decimal");

                    b.Property<byte?>("GP番号_GPNumber")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("一般管理費_A_GeneralManagementCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("一般管理費_B_GeneralManagementCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("付帯工事_A_AccessoryWork_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("付帯工事_B_AccessoryWork_B")
                        .HasColumnType("decimal");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("共通仮設費_A_CommonTemporaryCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通仮設費_B_CommonTemporaryCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通費_A_CommonCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("共通費_B_CommonCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務小計_A_LaborSubtotal_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務小計_B_LaborSubtotal_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費_A_LaborCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費_B_LaborCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("外注費_A_SubcontractingCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("外注費_B_SubcontractingCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("材料小計_A_MaterialSubtotal_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("材料小計_B_MaterialSubtotal_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("現場管理費_A_SiteManagementCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("現場管理費_B_SiteManagementCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("現場雑費_A_SiteMiscellaneousCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("現場雑費_B_SiteMiscellaneousCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費小計_A_CostSubtotal_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("経費小計_B_CostSubtotal_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("総計_A_Total_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("総計_B_Total_B")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("諸経費_A_VariousCosts_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("諸経費_B_VariousCosts_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("防災_A_DisasterPrevention_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("防災_B_DisasterPrevention_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材_A_MiscMaterials_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("雑材_B_MiscMaterials_B")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("電線類_A_Wires_A")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("電線類_B_Wires_B")
                        .HasColumnType("decimal");

                    b.ToTable("TW_明細分析データ_DetailAnalysisData");
                });

            modelBuilder.Entity("ComMS.Models.TW_検索素材マスタ_SearchMaterialMaster", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<byte?>("マスタFLG_MasterFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("天井開口費_CeilingOpeningCost")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("建物単価_BuildingUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出単価_QuotedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<DateTime?>("更新日付_UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("更新者_Updater")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛A_WorkRateA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_WorkRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InHouseUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("積資単価_AccumulatedMaterialUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<string>("素材CD_MaterialCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<string>("部材名_ComponentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.Property<float?>("電設乗率_ElectricalLoadingRate")
                        .HasColumnType("real");

                    b.Property<float?>("電設原価率_ElectricalCostRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("電設資材_ElectricalMaterials")
                        .HasColumnType("decimal");

                    b.ToTable("TW_検索素材マスタ_SearchMaterialMaster");
                });

            modelBuilder.Entity("ComMS.Models.TW_比較データ_ComparisonData", b =>
                {
                    b.Property<byte?>("Group番号_GroupNumber")
                        .HasColumnType("tinyint");

                    b.Property<float?>("乗率_RateOfIncrease")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("単価1_UnitPrice1")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価2_UnitPrice2")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("単価3_UnitPrice3")
                        .HasColumnType("decimal");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<short?>("工種番号_WorkTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出金額_SubmittedAmount")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("見積番号_EstimateNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.ToTable("TW_比較データ_ComparisonData");
                });

            modelBuilder.Entity("ComMS.Models.TW_比較基本データ_ComparisonBasicData", b =>
                {
                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<byte?>("掛率_MultiplicationRate")
                        .HasColumnType("tinyint");

                    b.Property<string>("採用製作所名_SelectedManufacturerName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名1_ManufacturerName1")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名2_ManufacturerName2")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("製作所名3_ManufacturerName3")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("金額_Amount")
                        .HasColumnType("decimal");

                    b.Property<string>("頁_Page")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("TW_比較基本データ_ComparisonBasicData");
                });

            modelBuilder.Entity("ComMS.Models.TW_積算集計データ_EstimationSummaryData", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("NET率_NETRate")
                        .HasColumnType("real");

                    b.Property<float?>("乗率_Rate")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AdditionalRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG_CategoryFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<byte?>("単価計算FLG_UnitPriceCalculationFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ItemNameAndDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("塗装係数_PaintingCoefficient")
                        .HasColumnType("real");

                    b.Property<float?>("天井開口係数_CeilingOpeningCoefficient")
                        .HasColumnType("real");

                    b.Property<byte?>("工種Child_WorkTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_WorkTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_Dimensions")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価_QuotedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("提出数量_QuotedQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("提出金額_QuotedAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD_SupplyCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<byte?>("案_Scenario")
                        .HasColumnType("tinyint");

                    b.Property<float?>("歩掛_WorkHoursRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("社内数量_InternalQuantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_ReplacementRate")
                        .HasColumnType("real");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TW_積算集計データ_EstimationSummaryData");
                });

            modelBuilder.Entity("ComMS.Models.TW_総合複合単価ワーク_OverallCompositeUnitPriceWork", b =>
                {
                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AdditionalRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("入力FLG_InputFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費小計_LaborCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("建物単価_BuildingUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("材料費小計_MaterialCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛A_WorkHoursRateA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_WorkHoursRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("積資単価_AccumulatedMaterialUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<byte?>("補助FLG_AssistanceFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("補助_Assistance")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("補助番号_AssistanceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("補助表示順_AssistanceDisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_ReplacementRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価小計_CompositeUnitPriceSubtotal")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.ToTable("TW_総合複合単価ワーク_OverallCompositeUnitPriceWork");
                });

            modelBuilder.Entity("ComMS.Models.TW_製作所データ_ProducersData", b =>
                {
                    b.Property<short?>("No_Number")
                        .HasColumnType("smallint");

                    b.Property<string>("製作所名_ProducersName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TW_製作所データ_ProducersData");
                });

            modelBuilder.Entity("ComMS.Models.TW_複合単価データ_CompositeUnitPriceData", b =>
                {
                    b.Property<float?>("その他_Others")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("入力FLG_InputFlag")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("労務単価A_LaborPriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務単価B_LaborPriceB")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("労務費小計_LaborCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("工種番号_ConstructionTypeCode")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("建物単価_BuildingPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("材料費小計_MaterialCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛A_WorkRateA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_WorkRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("積資単価_AccumulatedMaterialPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<byte?>("補助FLG_SupportFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("補助_Support")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("補助番号_SupportNumber")
                        .HasColumnType("int");

                    b.Property<int?>("補助表示順_SupportDisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価小計_CompositePriceSubtotal")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<short?>("部材番号_MaterialCode")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.ToTable("TW_複合単価データ_CompositeUnitPriceData");
                });

            modelBuilder.Entity("ComMS.Models.TW_複合率設定データ_CompositeRateSettingData", b =>
                {
                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ItemNameAndDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("工種番号_ConstructionTypeCode")
                        .HasColumnType("int");

                    b.Property<byte?>("案_Plan")
                        .HasColumnType("tinyint");

                    b.Property<float?>("歩掛A_WorkRateA")
                        .HasColumnType("real");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("部材番号_MaterialCode")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.ToTable("TW_複合率設定データ_CompositeRateSettingData");
                });

            modelBuilder.Entity("ComMS.Models.TW_複合集計データ_CompositeAggregationData", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他_Others")
                        .HasColumnType("real");

                    b.Property<float?>("乗率_Multiplier")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("分類FLG_ClassFlag")
                        .HasColumnType("tinyint");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("単価_Price")
                        .HasColumnType("decimal");

                    b.Property<byte?>("単価計算FLG_PriceCalculationFlag")
                        .HasColumnType("tinyint");

                    b.Property<float?>("原価率_CostRate")
                        .HasColumnType("real");

                    b.Property<string>("品名及び名称_ItemNameAndDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("塗装係数_PaintingCoefficient")
                        .HasColumnType("real");

                    b.Property<float?>("天井開口係数_CeilingOpeningCoefficient")
                        .HasColumnType("real");

                    b.Property<byte?>("工種Child_WorkTypeChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("工種FLG_WorkTypeFlag")
                        .HasColumnType("tinyint");

                    b.Property<int?>("工種番号_WorkTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_Dimension")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価_SubmittedPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出金額_SubmittedAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("支給区分CD_SupplyCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("普作単価_StandardWorkPrice")
                        .HasColumnType("decimal");

                    b.Property<byte?>("案_Plan")
                        .HasColumnType("tinyint");

                    b.Property<float?>("歩掛A_WorkRateA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_WorkRateB")
                        .HasColumnType("real");

                    b.Property<bool?>("比較表FLG_ComparisonTableFlag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("社内単価_InternalPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("社内金額_InternalAmount")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_SupplyRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価A_CompositePriceA")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("複合単価B_CompositePriceB")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号_EstimateNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<short?>("部材番号_MaterialCode")
                        .HasColumnType("smallint");

                    b.Property<float?>("雑材消耗率_MiscellaneousMaterialConsumptionRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("電工単価_ElectricalWorkPrice")
                        .HasColumnType("decimal");

                    b.Property<string>("項目_Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TW_複合集計データ_CompositeAggregationData");
                });

            modelBuilder.Entity("ComMS.Models.TW_見積一覧ワーク_WorkQuotationSummary", b =>
                {
                    b.Property<string>("仕入先_Supplier")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("作成者_Creator")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("工事名称_ProjectName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先1_QuotationDestination1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先2_QuotationDestination2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("提出先_QuotationDestination")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("表示見積番号_DisplayQuotationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("見積番号_QuotationNumber")
                        .HasColumnType("int");

                    b.ToTable("TW_見積一覧ワーク_WorkQuotationSummary");
                });

            modelBuilder.Entity("ComMS.Models.TW_計算式_CalculationFormula", b =>
                {
                    b.Property<byte?>("No_Number")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("表示FLG_DisplayFlag")
                        .HasColumnType("bit");

                    b.Property<string>("計算項目_CalculationItem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TW_計算式_CalculationFormula");
                });

            modelBuilder.Entity("ComMS.Models.TW_追加並替えワーク_AdditionalReorderingWork", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AdditionalRate")
                        .HasColumnType("real");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<string>("分類名_CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("建物単価_BuildingUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<bool?>("明細FLG_DetailFlag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("正表示順_CorrectDisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("歩掛A_WorkHoursRateA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_WorkHoursRateB")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("積資単価_AccumulatedMaterialUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("素材CD_MaterialCode")
                        .HasColumnType("int");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材名_MaterialName")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_ReplacementRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<bool?>("選択FLG_SelectionFlag")
                        .HasColumnType("bit");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.ToTable("TW_追加並替えワーク_AdditionalReorderingWork");
                });

            modelBuilder.Entity("ComMS.Models.TW_部材データ_MaterialsData", b =>
                {
                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte?>("入力FLG_InputFlag")
                        .HasColumnType("tinyint");

                    b.Property<int?>("分類1_Category1")
                        .HasColumnType("int");

                    b.Property<int?>("分類2_Category2")
                        .HasColumnType("int");

                    b.Property<int?>("分類3_Category3")
                        .HasColumnType("int");

                    b.Property<int?>("分類4_Category4")
                        .HasColumnType("int");

                    b.Property<int?>("分類5_Category5")
                        .HasColumnType("int");

                    b.Property<int?>("分類6_Category6")
                        .HasColumnType("int");

                    b.Property<int?>("分類7_Category7")
                        .HasColumnType("int");

                    b.Property<int?>("分類8_Category8")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<decimal?>("労務費小計_LaborCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("材料費小計_MaterialCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛A_LaborCostA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_LaborCostB")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<byte?>("補助FLG_AssistanceFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("補助_Assistance")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float?>("補給率_ReplacementRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("複合単価小計_CompositeUnitPriceSubtotal")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号_EstimateNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("部材FLG_MaterialFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("部材名1_MaterialName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名2_MaterialName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名3_MaterialName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名4_MaterialName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名5_MaterialName5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名6_MaterialName6")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名7_MaterialName7")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名8_MaterialName8")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("部材番号_MaterialNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("金額_Amount")
                        .HasColumnType("decimal");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.ToTable("TW_部材データ_MaterialsData");
                });

            modelBuilder.Entity("ComMS.Models.TW_部材並替えワーク1_MaterialReorderingWork1", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("分類1No_Category1Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2No_Category2Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3No_Category3Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4No_Category4Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<decimal?>("労務費小計_LaborCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("塗装費_PaintingCost")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("天井開口_CeilingOpening")
                        .HasColumnType("decimal");

                    b.Property<int?>("工種番号_WorkTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_Dimensions")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価_QuotedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<short?>("支給区分CD_SupplyCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("材料費小計_MaterialCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("歩掛A_LaborCostA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_LaborCostB")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_ReplacementRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号_EstimateNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<byte?>("部材GRP_MaterialGroup")
                        .HasColumnType("tinyint");

                    b.Property<string>("部材名1_MaterialName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名2_MaterialName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名3_MaterialName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名4_MaterialName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("部材明細_MaterialDetails")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("金額_Amount")
                        .HasColumnType("decimal");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.ToTable("TW_部材並替えワーク1_MaterialReorderingWork1");
                });

            modelBuilder.Entity("ComMS.Models.TW_部材並替えワーク2_MaterialReorderingWork2", b =>
                {
                    b.Property<byte?>("ABC材_ABCMaterial")
                        .HasColumnType("tinyint");

                    b.Property<float?>("その他_Other")
                        .HasColumnType("real");

                    b.Property<float?>("付属品率_AccessoryRate")
                        .HasColumnType("real");

                    b.Property<string>("作成者CD_CreatorCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<short?>("分類1No_Category1Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類1_Category1")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2No_Category2Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類2_Category2")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3No_Category3Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類3_Category3")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4No_Category4Number")
                        .HasColumnType("smallint");

                    b.Property<short?>("分類4_Category4")
                        .HasColumnType("smallint");

                    b.Property<int?>("労務単価A_LaborUnitPriceA")
                        .HasColumnType("int");

                    b.Property<int?>("労務単価B_LaborUnitPriceB")
                        .HasColumnType("int");

                    b.Property<decimal?>("労務費小計_LaborCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<short?>("単位CD_UnitCode")
                        .HasColumnType("smallint");

                    b.Property<string>("単位_Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("塗装費_PaintingCost")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("天井開口_CeilingOpening")
                        .HasColumnType("decimal");

                    b.Property<int?>("工種番号_ConstructionTypeNumber")
                        .HasColumnType("int");

                    b.Property<string>("形状寸法_Dimensions")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("提出単価_SubmittedUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<float?>("撤去率A_RemovalRateA")
                        .HasColumnType("real");

                    b.Property<float?>("撤去率B_RemovalRateB")
                        .HasColumnType("real");

                    b.Property<short?>("支給区分CD_SupplyCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("支給区分名_SupplyCategoryName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float?>("数量_Quantity")
                        .HasColumnType("real");

                    b.Property<decimal?>("材料費小計_MaterialCostSubtotal")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("標準単価_StandardUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("正表示順_CorrectDisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("歩掛A_LaborCostA")
                        .HasColumnType("real");

                    b.Property<float?>("歩掛B_LaborCostB")
                        .HasColumnType("real");

                    b.Property<decimal?>("社内単価_InternalUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<short?>("素材分類CD_MaterialCategoryCode")
                        .HasColumnType("smallint");

                    b.Property<string>("素材分類名_MaterialCategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<float?>("補給率_ReplacementRate")
                        .HasColumnType("real");

                    b.Property<decimal?>("複合単価_CompositeUnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("見積番号_QuotedNumber")
                        .HasColumnType("int");

                    b.Property<short?>("部材FLG_MaterialFlag")
                        .HasColumnType("smallint");

                    b.Property<byte?>("部材GRP_MaterialGroup")
                        .HasColumnType("tinyint");

                    b.Property<string>("部材名1_MaterialName1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名2_MaterialName2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名3_MaterialName3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名4_MaterialName4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("部材名_MaterialName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("部材明細_MaterialDetails")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short?>("部材番号_MaterialNumber")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("金額_Amount")
                        .HasColumnType("decimal");

                    b.Property<float?>("雑材率_MiscellaneousMaterialRate")
                        .HasColumnType("real");

                    b.ToTable("TW_部材並替えワーク2_MaterialReorderingWork2");
                });

            modelBuilder.Entity("ComMS.Models.TW_部署データ_DepartmentData", b =>
                {
                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("部署CD_DepartmentCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("部署名_DepartmentName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("TW_部署データ_DepartmentData");
                });

            modelBuilder.Entity("ComMS.Models.TW_集計工種選択_AggregationWorkTypeSelection", b =>
                {
                    b.Property<string>("工種名_WorkTypeName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<short?>("工種番号_WorkTypeNumber")
                        .HasColumnType("smallint");

                    b.Property<int?>("表示順_DisplayOrder")
                        .HasColumnType("int");

                    b.ToTable("TW_集計工種選択_AggregationWorkTypeSelection");
                });

            modelBuilder.Entity("ComMS.Models.T_ErrorList", b =>
                {
                    b.Property<DateTime?>("Err_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Err_Description")
                        .HasColumnType("ntext");

                    b.Property<int?>("Err_Number")
                        .HasColumnType("int");

                    b.Property<string>("Err_Source")
                        .HasColumnType("ntext");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ModuleName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ProcedureName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.ToTable("T_ErrorList");
                });

            modelBuilder.Entity("ComMS.Models.T_TablePath", b =>
                {
                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DbName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("FLG")
                        .HasColumnType("tinyint");

                    b.Property<short?>("ID")
                        .HasColumnType("smallint");

                    b.Property<string>("NewTableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldTableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Path")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Use")
                        .HasColumnType("bit");

                    b.ToTable("T_TablePath");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ComMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ComMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ComMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
